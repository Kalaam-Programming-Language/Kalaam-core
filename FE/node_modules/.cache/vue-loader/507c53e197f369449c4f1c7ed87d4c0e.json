{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jonny/Desktop/myProjects/Kalaam-core/FE/src/views/Documentation.vue?vue&type=style&index=0&id=939d8420&scoped=true&lang=css&","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/src/views/Documentation.vue","mtime":1618273899892},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/vue-cli-plugin-quasar/lib/loader.auto-import.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZG9jewoJYm9yZGVyOiBzb2xpZCAycHggIzMxZDhmMzsKfQoKCi5jb2xsYXBzaWJsZSB7CiAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICBjb2xvcjogcmdiKDAsIDAsIDApOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgcGFkZGluZzogMThweDsKICAgIHdpZHRoOiA5MCU7CiAgICBib3JkZXI6IG5vbmU7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgb3V0bGluZTogbm9uZTsKICAgIGZvbnQtc2l6ZTogMTEwJTsKICAgIGZvbnQtd2VpZ2h0OiA1MDA7CiAgICBib3JkZXI6IHNvbGlkIDAuNXB4ICNjYWQ2Mzg7OwogICAgbWFyZ2luLXRvcDogMiU7Cn0KLmNvbGxhcHNpYmxlOmhvdmVyIHsKCiAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM2LCAyMTQsIDg3KTsKCgp9CgoKCgouYWJvdXR7CgoKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDEwMCU7CiAgICAgIG1hcmdpbi1ib3R0b206IDEwJTsKfQoKLmNvbnRlbnQgewogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZGZiZmI7CiAgIAogICAgZGlzcGxheTogZmxleDsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgICAgd2lkdGg6IDkwJTsKICAgIG1hcmdpbi1sZWZ0OiA1JTsKfQoKCi5jb250ZW50IGRpdjpudGgtY2hpbGQoMSl7CgoKICB3aWR0aDogNTUlOwogIHBhZGRpbmctcmlnaHQ6IDclOwogICAgZm9udC1zaXplOiBsYXJnZTsKICAgIG1hcmdpbi1sZWZ0OiAyJQp9CgouY29udGVudCBkaXY6bnRoLWNoaWxkKDIpewoKCiAgd2lkdGg6IDQ1JTsKICAgIG1hcmdpbi10b3A6IDQlOwogICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgICBjb2xvcjogd2hpdGU7CiAgICBwYWRkaW5nLWxlZnQ6IDIlOwogICAgaGVpZ2h0OiBmaXQtY29udGVudDsKfQoKCmgzewoKICBtYXJnaW4tYm90dG9tOiAwCn0KCnByZXsKCiAgbWFyZ2luLXRvcDogMDsKICBmb250LXNpemU6IDExMSU7Cn0KCmg2ewoKICAgICAgbWFyZ2luLXRvcDogNiU7CiAgICBtYXJnaW4tYm90dG9tOiA2JTsKICAgIGNvbG9yOiAjMTQ0NTc3OwoKfQoKI1RyeUNvZGVidG4KewoKbWFyZ2luLXRvcDogMyU7CgogIHdpZHRoOiAzOCU7CiAgaGVpZ2h0OiA1MHB4OwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIGJvcmRlcjogbm9uZTsKCiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KCBjaXJjbGUgNTM0cHggYXQgNy44JSAxNy42JSwgIHJnYmEoMjU0LDI1MywxMTIsMSkgMS43JSwgcmdiYSgyNDgsMTQzLDExMSwxKSA5MS44JSApOwoKCn0KCiNUcnlDb2RlYnRuOmhvdmVyewoKICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KCBjaXJjbGUgNTM0cHggYXQgNy44JSAxNy42JSwgIHJnYmEoMjU0LDI1MywxMTIsMSkgMS43JSwgcmdiKDIyLCAyMSwgMykgOTEuOCUgKTsKCn0KCiNDb2RlUGFyYXsKCiAgICAgCiAgICB3aWR0aDogMTAwJTsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgCiAgICBmb250LXNpemU6IDEwMCU7CiAgICBjb2xvcjogd2hpdGU7Cn0KCmg2ewoKICBjb2xvcjogI2FjYjcwODsKfQouc2xpZGUtZmFkZS1lbnRlci1hY3RpdmUgewogIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTsKfQouc2xpZGUtZmFkZS1sZWF2ZS1hY3RpdmUgewogIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1vdXQgY3ViaWMtYmV6aWVyKDEuMCwgMC41LCAwLjgsIDEuMCk7Cn0KLnNsaWRlLWZhZGUtZW50ZXIsIC5zbGlkZS1mYWRlLWxlYXZlLXRvCi8qIC5zbGlkZS1mYWRlLWxlYXZlLWFjdGl2ZSBiZWxvdyB2ZXJzaW9uIDIuMS44ICovIHsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7CiAgb3BhY2l0eTogMDsKfQpwewogCiAgICBjb2xvcjogYmxhY2s7CiAgICBmb250LWZhbWlseTogaW5oZXJpdDsKICAgIGZvbnQtd2VpZ2h0OiA0MDA7Cgp9CnB7CgogIGZvbnQtc2l6ZTogOTAlOwogIG1hcmdpbi10b3A6IDYlCn0KCkBtZWRpYSBvbmx5IHNjcmVlbgphbmQgKG1heC13aWR0aCA6IDQ4MHB4KSB7CgouY29udGVudHsKCgogIGRpc3BsYXk6IGdyaWQ7CiAgcGFkZGluZzogMDsKICB3aWR0aDogOTAlOwogIHBhZGRpbmctbGVmdDogMyU7CiAgbWFyZ2luLXRvcDogMiUKfQoKLmNvbnRlbnQgZGl2Om50aC1jaGlsZCgxKQp7CgoKICB3aWR0aDogOTAlCn0KCi5jb250ZW50IGRpdjpudGgtY2hpbGQoMikKewoKCiAgd2lkdGg6IDk1JTsKICBvdmVyZmxvdzogYXV0bwp9Ci5hYm91dHsKCiAgd2lkdGg6IDEwMCU7CiAgbWFyZ2luLXRvcDogMyUKfQoKCn0KCgo="},{"version":3,"sources":["Documentation.vue"],"names":[],"mappingsuuBA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;;;AAKA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA","file":"Documentation.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"about\">\n     <Header/>\n\n    <div>\n<button  v-on:click=\"showStar0 = !showStar0\"  type=\"button\" class=\"collapsible\">दिखाए()</button>\n\n<transition name=\"slide-fade\">\n<div v-if=\"showStar0\" class=\"content\">\n\n<div>\n\n<h6>काम</h6>\n\n<p> RESULTS को OUTPUT SCREEN पे दिखाने के लिए दिखाए() का उपयोग होता है। </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>1.एक घोषित (declared) वेरिएबल को दिखाए करने के लिए ।   </h6>\n<p>Name &#61; \"Hello World\" </p>  \n<p>दिखाए(Name) </p>  \n<p>    </p>\n\n<h6>२. Direct शब्दों दिखाए करने के लिए ।  </h6>\n<p>दिखाए(\"Hello World\")</p> \n<p>दिखाए(007)</p> \n\n<h6>३. Multi/Concatenated शब्दों को दिखाए करने के लिए ।    </h6>\n<p>Name &#61; \"Kalam\" </p> \n<p>दिखाए(\"Hello World,\" + \"My Name is\" + Name + \"!\")</p> \n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\nName=\"Hello World\"   \nदिखाए(Name)   \n\n\nदिखाए(\"Tic Tac Toe\") \nदिखाए(007) \n\n\nName=\"Kalam\"  \nदिखाए(\"Hello World,\" + \"My Name is\" + Name + \"!\") \n\n\n \n\n</pre>\n</p>\n</div>\n\n\n</div>\n\n</transition>\n    </div>\n<button   v-on:click=\"showStar2 = !showStar2\"  type=\"button\" class=\"collapsible\">इनपुट()</button>\n\n<transition name=\"slide-fade\">\n<div v-if=\"showStar2\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> किसी नई VALUE को स्वीकार करना।  </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>१: <i> इनपुट() </i> को बताये आपको किस VARIABLE की  VALUE स्वीकार करनी है   </h6>\n<p>इनपुट(<i> VARIABLE </i>)</p>  \n\n<h6> उदाहरण</h6>\n\n<p>इनपुट(Name)</p> \n<p>अगर आपने इनपुट के दौर पर <i>Kalam</i>  डाला होगा तो COMPUTER उसे इस तरह स्वीकार करेगा ।  <b> Name=\"Kalam\".</b> </p> \n<p>एकबार VARIABLE की Value सेट होनेपर उसे Program में कभी भी use किया जा सकता है ।</p> \n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\nइनपुट(Name)\n\n \nदिखाए(Name)\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar3 = !showStar3\"  type=\"button\" class=\"collapsible\">अगर()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar3\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> एक Certain Conditionके तहत कोड Execution को Allow करता है। \nइसमें २ Conditions होती है |\n1.True\n2.False  </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>१ . Single Condition को मूल्यांकन (Evaluate) करना।   </h6>\n<p> अगर (Language &#61;&#61; 'kalam') </p>  \n<p> अगर (Age &gt; 18) </p>  \n<p><b> स्वीकृत  Comparion operators नीचे दिए गए है : </b>  </p>\n<p><b>&gt;</b> - Greater than</p>\n<p><b>&lt;</b> -  Less than</p>\n<p><b>&#61;&#61;</b> - is Equal to</p>\n<p><b>&#33;&#61;</b> - is Not Equal to</p>\n\n\n\n<h6>२: Multiple Conditions को मूल्यांकन (Evaluate) करना। \n </h6>\n<p>अगर (Age &gt; 16 &amp;&amp; Education &#61;&#61; 'ssc')</p> \n<p>अगर (Country&#61;&#61;'india' || Language &#61;&#61; 'hindi')</p> \n\n\n<p><b>  स्वीकृत comparison Operators नीचे दिए गए है: </b> </p>\n<p><b>&amp;&amp;</b> - अगर दोनों Conditions सत्य हो तो उसे True समझा जाता है। </p>\n<p><b>&#124;&#124;</b> - अगर एक Condition सत्य हो तो True समझा जाता है।</p>\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\nइनपुट(language)\n\n\nअगर(language=='kalam')\n\n{\n\nदिखाए('Alright, that's cool!')\n\n\n}\n\n\nउदाहरण 2\n\n\nइनपुट(language)\n\nइनपुट(country)\n\n\nअगर(language=='kalam' || country=='india')\n{\n\n\n\nदिखाए('That works too.')\n\n\n}\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n\n<!--\n<button   v-on:click=\"showStar8 = !showStar8\"  type=\"button\" class=\"collapsible\">अन्यथा</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar8\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> अगर कोई भी कंडीशन satisfy ना हो तो एक Block of code  execute करना |</p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>1: Define  </h6>\n<p>अन्यथा </p>  \n\n<p> कृपया इस बात की दखल ले की अन्यथा ओपन ब्रैकेट्स होने पर भी कोई पर्याय नहीं लेता। </p>\n\n\n\n</div>\n\n<div style=\"border: solid 2px #31d8f3;\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\nlanguage='kalaam'\n\n\nअगर(language=='kalaam')\n\n{\n\n\nदिखाए('Alright, that's cool!')\n\n\n}\n\n\nअन्यथा\n{\n\nदिखाए('Sorry, that did not worked!')\n\n\n\n}\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n-->\n\n<button   v-on:click=\"showStar4 = !showStar4\"  type=\"button\" class=\"collapsible\">दुहराओ x को y मे</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar4\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> एक ही कोड को बार-बार दोहराना। </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>१ . लूप को डिफाइन करे।  </h6>\n<p> <b> दुहराओ x को y मे </b></p>  \n\n<p> यहाँ  y एक रेंज है और (०,१० ) , (५,१०० ) आदि की तरह Define की जा सकती है।   </p>\n<p> x एक index या फिर iterator है। . For e.g  १ और १० के बीच में की Values ले सकता है (१ और १० भी )\n(० , १०)  </p>\n\n<p> <b> दुहराओ x को City मे </b></p>  \n <p>Here instead of a custom range we iterate it over the length of variable.</p>  \n <p>Basically, if City='Pusad', the range will be automatically set as (0,5) because length of 'Pusad' is 5. </p>\n<p>    </p>\n\n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n#उदाहरण 1  \n\n\n\nदुहराओ x को (0,10) मे\n\n{\n\nvalue= x*5\n\nदिखाए(value)\n\n}\n\n\n#उदाहरण 2  \n\n\nName=\"HALF COOKED RICE\"\n\nदुहराओ y को Name मे\n\n{\n\nvalue=Name[y]\n\nदिखाए(value + y)\n\n}\n\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar5 = !showStar5\"  type=\"button\" class=\"collapsible\">जबतक()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar5\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p>जबतक में दिए हुए शर्त(Condition) के पूरा होने तक आगे के कोड को रन करे |  </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>1: Define </h6>\n<p>जबतक(<i>YourCondition</i> ) </p>  \n\n<p><b> The accepted comparison operators are: </b>  </p>\n<p><b>&gt;</b> - Greater than</p>\n<p><b>&lt;</b> -  Less than</p>\n<p><b>&#61;&#61;</b> - is Equal to</p>\n<p><b>&#33;&#61;</b> - is Not Equal to</p>\n\n<h6> उदाहरण</h6>\n\n<p> <b>जबतक(count &lt; 25)</b> </p> \n<p>The code will run until the condition evaluates itself to true. </p> \n<p>When the value of count reaches 26, code execution will stop. </p> \n\n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\ncount=0\n\n\nजबतक(count<25)\n{\n\nदिखाए(count)\n\n\ncount=count+1\n\n\n}\n\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar6 = !showStar6\"  type=\"button\" class=\"collapsible\">.संख्या()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar6\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> Directly find out the length of a String or Array</p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>1: Define</h6>\n<p> <i>YourVariable</i>.संख्या() </p>  \n\n<h6> उदाहरण</h6>\n\n<p> <b>City.संख्या()</b> </p> \n<p>If City &#61; 'Banglore' then City.संख्या() will output the value <b>8</b>  </p> \n<p>If City &#61; ['Pusad','Pune','Mumbai','Delhi'] then City.संख्या() will output the value <b>4</b> </p> \n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\nCity='Banglore'\n\nCities=['Pusad','Pune','Mumbai','Delhi']\n\n\nCitylength= City.संख्या()\n\nCitieslength=Cities.संख्या()\n\n\nदिखाए('The length of the City is' + Citylength )\n\nदिखाए('The length of the Cities is' + Citieslength )\n\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n<button   v-on:click=\"showStar7 = !showStar7\"  type=\"button\" class=\"collapsible\">.पुश()</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar7\" class=\"content\">\n<div>\n\n<h6>काम</h6>\n\n\n<p> Push values to array</p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>1: Push Value to an Array </h6>\n<p> <i>ArrayName</i> = &nbsp;[ &nbsp; ] </p>  \n<p>ArrayName.पुश(<i>YourValue</i>) </p>  \n\n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID1')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID1\" >\n\n\n\n#उदाहरण 1\n\nNumbers=[]\n\nदुहराओ x को (1,10)\n\n{\n\n\nNumbers.पुश(x)\n\n\n}\n\nदिखाए(Numbers)\n\n\n#उदाहरण 2\n\nNumbers=[]\n\n\nName='Angry Birds'\ntype='Game'\n\n\nNumbers.पुश(Name)\n\nNumbers.पुश(type)\n\n\n\nदिखाए(Numbers)\n\n\n\n \n\n</pre>\n</p>\n</div>\n</div>\n</transition>\n\n<button   v-on:click=\"showStar1 = !showStar1\"  type=\"button\" class=\"collapsible\">रचना</button>\n<transition name=\"slide-fade\">\n<div v-if=\"showStar1\" class=\"content\">\n\n<div>\n\n<h6>काम</h6>\n\n\n<p> कोड जो दोबारा इस्तेमाल किया जा सकता है उसे एक ब्लॉक में wrap किया जाता है, जिसे हम रचना कहते है। </p>\n\n<h6>इसका उपयोग कैसे करे?</h6>\n\n<h6>।. एक रचना को डिफाइन करने के लिए </h6>\n<h3>रचना <i>रचना-का-नाम</i> (<i>पर्याय1</i> ,<i>पर्याय2</i> ) </h3>  \n<p><b>रचना का नाम:</b></p>  \n<p>रचना का नाम केस सेंसिटिव होता है और उसमे सिर्फ अक्षरोंका (अल्फाबेट्स का) इस्तेमाल करना चाहिए। </p>  \n<p> <b>रचना पर्याय:</b>  </p>  \n<p>रचना पर्याय का टेम्पररी वैल्यूज स्टोर  करनेमे इस्तेमाल किया जा सकता है। जब किसी रचना को कॉल किया जाता है तभी ये वैल्यूज पास किये जाते है।  </p>  \n<p>पर्याय के नाम भी  केस सेंसिटिव होते है और ये आपकी चॉइस के हिसाब से चेंज किये जा सकते है।  मगर इनमे सिर्फ अक्षरोंका अर्थात अल्फाबेट्स का इस्तेमाल करे। </p> \n\n\n\n\n<h6>2: रचना को कॉल करना ।  </h6>\n<h3><i>रचना-का-नाम</i> (<i>पर्याय1</i> ,<i>पर्याय2</i> ) </h3> \n<p><b>रचना का नाम - PrintFullName</b>  </p>  \n<p>जब आप रचना को कॉल करते है तभी इस बात का ध्यान जरूर रखना चाहिए की रचना का नाम और जब आप रचना को कॉल करते हो तबका नाम same होना चाहिए।   <br> For e.g PrintFullName &ne; printfullname  </p>  \n\n<h6> उदाहरण</h6>\n<p><b> वेरिएबल्स (Variables) को डिफाइन करे। </b></p>\n<p>FirstName &#61; 'Sachin' </p> \n<p>LastName \t&#61; 'Tendulkar' </p> \n\n<p><b> रचना declaration</b></p>\n <p>PrintFullName (x, y) </p> \n\n <p><b> रचना Body</b></p>\n <p>{</p>\n <p>दिखाए( x \t&#43; y ) </p> \n <p>}</p>\n\n<p><b>रचना call</b>  </p>  \n<p>PrintFullName(FirstName,LastName)</p>\n\n<p># जब आप रचना को कॉल करते है तभी इस बात का ध्यान जरूर रखना चाहिए की रचना का नाम और जब आप रचना को कॉल करते हो तबका नाम same होना चाहिए।  <br> For e.g PrintFullName≠printfullname  </p>  \n\n<p> <b>रचना पर्याय- ('Sachin','Tendulkar')</b>  </p>  \n<p>इस प्रोग्रामिंग भाषा के  तहत निर्धारित ग्रामर के अनुसार, (x, y) ('Sachin','Tendulkar) बन जाएगा। </p>\n<p>x will take a temporary value of 'Sachin'</p>\n<p>y will take a temporary value of 'Tendulkar'</p>\n\n\n\n</div>\n\n<div id=\"doc\">\n <button id=\"TryCodebtn\" @click=\"CopyCode('CodeID2')\">कोड के साथ खेलिए।</button>\n<p id=\"CodePara\" >\n\n\n<pre id=\"CodeID2\" >\n\n\n\nFirstName='Sachin'\n\nLastName='Tendulkar'\n\n\n\nरचना PrintFullName(First,Last)\n\n{\n\nदिखाए(First + Last)\n\n\n\n}\n\n\nPrintFullName(FirstName,LastName)\n\n\nJob='Doctor'\nCity='Pune'\n\nरचना AboutMe(x,y)\n\n{\n\n\n\nदिखाए(\"I am a\" + x + \"in\" + y)\n\n\n}\n\n\nAboutMe(Job,City)\n\n\nNumberOne=20\nNumberTwo=40\n\nरचना Add(a,b)\n{\n\nc=a+b\n\nदिखाए(c)\n\n\n}\n\n\nAdd(NumberOne,NumberTwo)\n\n\n \n\n \n\n\n\n\n \n\n \n\n</pre>\n</p>\n</div>\n\n\n\n</div>\n</transition>\n</div>\n\n  </div>\n</template>\n<script>\nimport Header from '../components/Header'\n\nimport { mapState } from 'vuex'\n\nexport default\n\n{\ndata() {\n  return {\n    showStar0: false,\n    showStar1: false,\n    showStar2: false,\n    showStar3: false,\n    showStar4: false,\n    showStar5: false,\n    showStar6: false,\n    showStar7: false,\n    showStar8: false,\n      }\n\n    }\n,\n   components:{\n    Header\n\n\n    },\n\n\n\n\n  computed: mapState(['CurrentCode']),\n\n\n  methods: {\n      \nCopyCode:function(el)\n\n{\n\n\n var copyText = document.getElementById(el);\n\n\nthis.$store.state.CurrentCode= copyText.innerHTML\n\n\n  this.$router.push('/Practice')\n\n\n\n}\n      \n  },\n}\n\n</script>\n<style scoped>\n#doc{\n\tborder: solid 2px #31d8f3;\n}\n\n\n.collapsible {\n     background-color: white;\n    color: rgb(0, 0, 0);\n    cursor: pointer;\n    padding: 18px;\n    width: 90%;\n    border: none;\n    text-align: left;\n    outline: none;\n    font-size: 110%;\n    font-weight: 500;\n    border: solid 0.5px #cad638;;\n    margin-top: 2%;\n}\n.collapsible:hover {\n\n       background-color: rgb(236, 214, 87);\n\n\n}\n\n\n\n\n.about{\n\n\n  display: inline-block;\n  width: 100%;\n      margin-bottom: 10%;\n}\n\n.content {\n    overflow: hidden;\n    background-color: #fdfbfb;\n   \n    display: flex;\n    text-align: left;\n        width: 90%;\n    margin-left: 5%;\n}\n\n\n.content div:nth-child(1){\n\n\n  width: 55%;\n  padding-right: 7%;\n    font-size: large;\n    margin-left: 2%\n}\n\n.content div:nth-child(2){\n\n\n  width: 45%;\n    margin-top: 4%;\n    background-color: black;\n    color: white;\n    padding-left: 2%;\n    height: fit-content;\n}\n\n\nh3{\n\n  margin-bottom: 0\n}\n\npre{\n\n  margin-top: 0;\n  font-size: 111%;\n}\n\nh6{\n\n      margin-top: 6%;\n    margin-bottom: 6%;\n    color: #144577;\n\n}\n\n#TryCodebtn\n{\n\nmargin-top: 3%;\n\n  width: 38%;\n  height: 50px;\n      cursor: pointer;\n      border: none;\n\n        background-image: radial-gradient( circle 534px at 7.8% 17.6%,  rgba(254,253,112,1) 1.7%, rgba(248,143,111,1) 91.8% );\n\n\n}\n\n#TryCodebtn:hover{\n\n      background-image: radial-gradient( circle 534px at 7.8% 17.6%,  rgba(254,253,112,1) 1.7%, rgb(22, 21, 3) 91.8% );\n\n}\n\n#CodePara{\n\n     \n    width: 100%;\n    text-align: left;\n  \n    font-size: 100%;\n    color: white;\n}\n\nh6{\n\n  color: #acb708;\n}\n.slide-fade-enter-active {\n  transition: all .3s ease;\n}\n.slide-fade-leave-active {\n  transition: all .2s ease-out cubic-bezier(1.0, 0.5, 0.8, 1.0);\n}\n.slide-fade-enter, .slide-fade-leave-to\n/* .slide-fade-leave-active below version 2.1.8 */ {\n  transform: translateY(10px);\n  opacity: 0;\n}\np{\n \n    color: black;\n    font-family: inherit;\n    font-weight: 400;\n\n}\np{\n\n  font-size: 90%;\n  margin-top: 6%\n}\n\n@media only screen\nand (max-width : 480px) {\n\n.content{\n\n\n  display: grid;\n  padding: 0;\n  width: 90%;\n  padding-left: 3%;\n  margin-top: 2%\n}\n\n.content div:nth-child(1)\n{\n\n\n  width: 90%\n}\n\n.content div:nth-child(2)\n{\n\n\n  width: 95%;\n  overflow: auto\n}\n.about{\n\n  width: 100%;\n  margin-top: 3%\n}\n\n\n}\n\n\n</style>"]}]}