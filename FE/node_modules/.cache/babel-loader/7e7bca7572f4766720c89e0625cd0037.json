{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-expand.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-expand.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmlzLWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwoKZnVuY3Rpb24gZ2V0VmFsKHZhbCkgewogIHJldHVybiBBcnJheS5pc0FycmF5KHZhbCkgPyB2YWwuc2xpY2UoKSA6IFtdOwp9CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGV4cGFuZGVkOiBBcnJheSAvLyBzeW5jCgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlubmVyRXhwYW5kZWQ6IGdldFZhbCh0aGlzLmV4cGFuZGVkKQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBleHBhbmRlZDogZnVuY3Rpb24gZXhwYW5kZWQodmFsKSB7CiAgICAgIHRoaXMuaW5uZXJFeHBhbmRlZCA9IGdldFZhbCh2YWwpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaXNSb3dFeHBhbmRlZDogZnVuY3Rpb24gaXNSb3dFeHBhbmRlZChrZXkpIHsKICAgICAgcmV0dXJuIHRoaXMuaW5uZXJFeHBhbmRlZC5pbmNsdWRlcyhrZXkpOwogICAgfSwKICAgIHNldEV4cGFuZGVkOiBmdW5jdGlvbiBzZXRFeHBhbmRlZCh2YWwpIHsKICAgICAgaWYgKHRoaXMuZXhwYW5kZWQgIT09IHZvaWQgMCkgewogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZCcsIHZhbCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbm5lckV4cGFuZGVkID0gdmFsOwogICAgICB9CiAgICB9LAogICAgX191cGRhdGVFeHBhbmRlZDogZnVuY3Rpb24gX191cGRhdGVFeHBhbmRlZChrZXksIGFkZCkgewogICAgICB2YXIgdGFyZ2V0ID0gdGhpcy5pbm5lckV4cGFuZGVkLnNsaWNlKCk7CiAgICAgIHZhciBpbmRleCA9IHRhcmdldC5pbmRleE9mKGtleSk7CgogICAgICBpZiAoYWRkID09PSB0cnVlKSB7CiAgICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgICAgdGFyZ2V0LnB1c2goa2V5KTsKICAgICAgICAgIHRoaXMuc2V0RXhwYW5kZWQodGFyZ2V0KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgdGFyZ2V0LnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgdGhpcy5zZXRFeHBhbmRlZCh0YXJnZXQpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-expand.js"],"names":["getVal","val","Array","isArray","slice","props","expanded","data","innerExpanded","watch","methods","isRowExpanded","key","includes","setExpanded","$emit","__updateExpanded","add","target","index","indexOf","push","splice"],"mappings":";;;;;;;AAAA,SAASA,MAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACC,OAAN,CAAcF,GAAd,IACHA,GAAG,CAACG,KAAJ,EADG,GAEH,EAFJ;AAGD;;AAED,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEJ,KADL,CACW;;AADX,GADM;AAKbK,EAAAA,IALa,kBAKL;AACN,WAAO;AACLC,MAAAA,aAAa,EAAER,MAAM,CAAC,KAAKM,QAAN;AADhB,KAAP;AAGD,GATY;AAWbG,EAAAA,KAAK,EAAE;AACLH,IAAAA,QADK,oBACKL,GADL,EACU;AACb,WAAKO,aAAL,GAAqBR,MAAM,CAACC,GAAD,CAA3B;AACD;AAHI,GAXM;AAiBbS,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,yBACQC,GADR,EACa;AAClB,aAAO,KAAKJ,aAAL,CAAmBK,QAAnB,CAA4BD,GAA5B,CAAP;AACD,KAHM;AAKPE,IAAAA,WALO,uBAKMb,GALN,EAKW;AAChB,UAAI,KAAKK,QAAL,KAAkB,KAAK,CAA3B,EAA8B;AAC5B,aAAKS,KAAL,CAAW,iBAAX,EAA8Bd,GAA9B;AACD,OAFD,MAGK;AACH,aAAKO,aAAL,GAAqBP,GAArB;AACD;AACF,KAZM;AAcPe,IAAAA,gBAdO,4BAcWJ,GAdX,EAcgBK,GAdhB,EAcqB;AAC1B,UAAMC,MAAM,GAAG,KAAKV,aAAL,CAAmBJ,KAAnB,EAAf;AACA,UAAMe,KAAK,GAAGD,MAAM,CAACE,OAAP,CAAeR,GAAf,CAAd;;AAEA,UAAIK,GAAG,KAAK,IAAZ,EAAkB;AAChB,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,UAAAA,MAAM,CAACG,IAAP,CAAYT,GAAZ;AACA,eAAKE,WAAL,CAAiBI,MAAjB;AACD;AACF,OALD,MAMK,IAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACrBD,QAAAA,MAAM,CAACI,MAAP,CAAcH,KAAd,EAAqB,CAArB;AACA,aAAKL,WAAL,CAAiBI,MAAjB;AACD;AACF;AA5BM;AAjBI,CAAf","sourcesContent":["function getVal (val) {\n  return Array.isArray(val)\n    ? val.slice()\n    : []\n}\n\nexport default {\n  props: {\n    expanded: Array // sync\n  },\n\n  data () {\n    return {\n      innerExpanded: getVal(this.expanded)\n    }\n  },\n\n  watch: {\n    expanded (val) {\n      this.innerExpanded = getVal(val)\n    }\n  },\n\n  methods: {\n    isRowExpanded (key) {\n      return this.innerExpanded.includes(key)\n    },\n\n    setExpanded (val) {\n      if (this.expanded !== void 0) {\n        this.$emit('update:expanded', val)\n      }\n      else {\n        this.innerExpanded = val\n      }\n    },\n\n    __updateExpanded (key, add) {\n      const target = this.innerExpanded.slice()\n      const index = target.indexOf(key)\n\n      if (add === true) {\n        if (index === -1) {\n          target.push(key)\n          this.setExpanded(target)\n        }\n      }\n      else if (index !== -1) {\n        target.splice(index, 1)\n        this.setExpanded(target)\n      }\n    }\n  }\n}\n"]}]}