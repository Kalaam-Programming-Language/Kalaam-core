{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/PushTokens/main.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/PushTokens/main.js","mtime":1652678464704},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/PushTokens/main.js"],"names":["RemoveBrackets","operatorType","ActiveLangugaeKeywords","PushVariable","v","tokens","push","PushString","value","type","PushVariableValue","PushNumber","PushOperator","subtype","PushKeyword","replace","console","log","Print","PushConditionalKeyword","PushEmptyArrayInit","data","i","PushForLoop","PushInput","cleaned_sourcedata","lastchar","charAt","length","AcceptAs","PushWhileLoop","PushWhileLoopCondition","PushForLoopAruguments","element","iterator","includes","Range","split","iterationStart","iterationEnd","PushArgs","PushCondition","PushToArray","PushExpression","PushNativeOperation","PushFunctionData","sourcedata","functionName","functionNameSplit","functionArguments","arguments","FunctionInvocation","FunctionStack","PushFunctionExecution","passedValues","PushArray","Split","IndexInput","PushCalculation","multiCal","test","PushRealTimePrintOperation","mode","PushStringandValueOperation"],"mappings":"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","sourcesContent":["import { RemoveBrackets, operatorType } from '../Scripts/Helpers';\nimport { ActiveLangugaeKeywords } from '../Compiler/constants';\n//ANCHOR - Functions to push token with type and value into tokens array for further parsing\n\nfunction PushVariable(v, tokens) {\n  tokens.push(v);\n}\n\nfunction PushString(value, tokens) {\n  tokens.push({\n    type: 'string',\n    value: value,\n  });\n}\n\nfunction PushVariableValue(value, tokens) {\n  tokens.push({\n    type: 'value',\n    value: value,\n  });\n}\n\nfunction PushNumber(value, tokens) {\n  tokens.push({\n    type: 'value',\n    value: value,\n  });\n}\n\nfunction PushOperator(value, tokens) {\n  let subtype = operatorType(value);\n\n  tokens.push({\n    type: 'operator',\n    value,\n    subtype,\n  });\n}\n\nfunction PushKeyword(value, tokens) {\n  value = value.replace('+', ' + ');\n  console.log('value:', value);\n  let subtype = value === ActiveLangugaeKeywords.Print ? 'print' : 'default';\n  console.log('ActiveLangugaeKeywords:', ActiveLangugaeKeywords);\n\n  tokens.push({\n    type: 'keyword',\n    value: value,\n    subtype,\n  });\n}\nfunction PushConditionalKeyword(value, tokens) {\n  tokens.push({\n    type: 'conditionalkeyword',\n    value: value,\n  });\n}\n\nfunction PushEmptyArrayInit(tokens, data, i) {\n  tokens.push({\n    type: 'EmptyArrayInit',\n    value: data[i - 1],\n    //skipping =\n  });\n}\n\nfunction PushForLoop(value, tokens) {\n  tokens.push({\n    type: 'ForLoopStart',\n    value: value,\n  });\n}\n\nfunction PushInput(value, tokens, cleaned_sourcedata, i) {\n  let lastchar = value.charAt(value.length - 1);\n\n  value = lastchar == ',' ? (value = value + cleaned_sourcedata[i + 1]) : value;\n\n  value = RemoveBrackets(value);\n\n  value = value.replace('इनपुट', '');\n\n  tokens.push({\n    type: 'AcceptInput',\n    value: ' ',\n    AcceptAs: value,\n  });\n}\n\nfunction PushWhileLoop(value, tokens) {\n  tokens.push({\n    type: 'WhileLoopStart',\n    value: value,\n  });\n}\n\nfunction PushWhileLoopCondition(value, tokens) {\n  tokens.push({\n    type: 'WhileLoopCondition',\n    value: value,\n  });\n}\n\nfunction PushForLoopAruguments(element, cleaned_sourcedata, i, tokens) {\n  //This values will be fixed even though for loop definations change\n  let iterator = cleaned_sourcedata[i + 1];\n  let value = cleaned_sourcedata[i + 3];\n\n  if (value.includes('(') && value.includes(',')) {\n    let Range = RemoveBrackets(value).split(',');\n    let iterationStart = Range[0];\n    let iterationEnd = Range[1];\n\n    // let k = i + 5;\n\n    PushArgs(iterator, value, iterationStart, iterationEnd);\n\n    //run a function to collect arguments\n  } else {\n    let Range = RemoveBrackets(cleaned_sourcedata[i + 5]).split(',');\n\n    let iterationStart = Range[0];\n    let iterationEnd = Range[1];\n\n    //let k = i + 6;\n\n    PushArgs(iterator, value, iterationStart, iterationEnd);\n  }\n\n  //to get (2,9) into start=2 and end=9\n\n  //run a function to store sourcedata\n\n  function PushArgs(iterator, value, iterationStart, iterationEnd) {\n    tokens.push({\n      type: 'ForLoopArguments',\n      iterator: iterator,\n      value: value,\n      iterationStart: iterationStart,\n      iterationEnd: iterationEnd,\n    });\n  }\n}\n\nfunction PushCondition(value, tokens) {\n  tokens.push({\n    type: 'condition',\n    value: value,\n  });\n}\n\nfunction PushToArray(value, tokens) {\n  tokens.push({\n    type: 'PushToArray',\n    value: value,\n  });\n}\n\nfunction PushExpression(value, tokens) {\n  tokens.push({\n    type: 'expression',\n    value: value,\n  });\n}\n\nfunction PushNativeOperation(value, tokens) {\n  tokens.push({\n    type: 'NativeOperation',\n    value: value,\n  });\n}\n\nfunction PushFunctionData(value, tokens, sourcedata, i) {\n  let functionName = sourcedata[i + 1];\n  let functionNameSplit = functionName.split('(');\n  let functionArguments = RemoveBrackets(functionNameSplit[1]);\n  //\n  functionArguments = functionArguments.split(',');\n\n  tokens.push({\n    type: 'function',\n    value: functionNameSplit[0],\n    arguments: functionArguments,\n    FunctionInvocation: false,\n    FunctionStack: [],\n  });\n}\n\nfunction PushFunctionExecution(value, tokens, sourcedata, i, passedValues) {\n  let functionName = value;\n  let functionNameSplit = functionName.split('(');\n  let functionArguments = RemoveBrackets(functionNameSplit[1]);\n  //\n  functionArguments = functionArguments.split(',');\n\n  tokens.push({\n    type: 'functionExecution',\n    value: functionNameSplit[0],\n    arguments: functionArguments,\n    FunctionInvocation: true,\n    passedValues: passedValues,\n  });\n}\n\nfunction PushArray(value, tokens) {\n  if (value.includes('(') && value.includes(')')) {\n    value = RemoveBrackets(value);\n\n    value = value.replace(']', '');\n\n    let Split = value.split('[');\n\n    let IndexInput = Split[1];\n\n    value = value + ']';\n\n    tokens.push({\n      type: 'Array',\n      value: value,\n      IndexInput: IndexInput,\n    });\n  } else {\n    tokens.push({\n      type: 'Array',\n      value: value,\n    });\n  }\n}\n\nfunction PushCalculation(value, tokens, cleaned_sourcedata, i, multiCal) {\n  //not allowing values like Numbers[a]\n  //revisit this\n\n  if (!(!/\\d+/.test(cleaned_sourcedata[i - 2]) && cleaned_sourcedata[i - 2].includes('['))) {\n    //\n\n    tokens.push({\n      type: 'Calculation',\n      value: value,\n      multiCal,\n    });\n  }\n}\n\nfunction PushRealTimePrintOperation(value, tokens) {\n  tokens.push({\n    type: 'value',\n    value: value,\n    mode: 'RealTimePrint',\n  });\n}\n\nfunction PushStringandValueOperation(value, tokens) {\n  tokens.push({\n    type: 'value',\n    value: value,\n    mode: 'StringandValue',\n  });\n}\n\nexport {\n  PushVariableValue,\n  PushNativeOperation,\n  PushToArray,\n  PushFunctionExecution,\n  PushFunctionData,\n  PushInput,\n  PushArray,\n  PushEmptyArrayInit,\n  PushCalculation,\n  PushConditionalKeyword,\n  PushCondition,\n  PushWhileLoop,\n  PushWhileLoopCondition,\n  PushForLoop,\n  PushForLoopAruguments,\n  PushExpression,\n  PushKeyword,\n  PushNumber,\n  PushOperator,\n  PushRealTimePrintOperation,\n  PushString,\n  PushStringandValueOperation,\n  PushVariable,\n};\n"]}]}