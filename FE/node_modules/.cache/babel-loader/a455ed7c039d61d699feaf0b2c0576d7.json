{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/TypeChecking.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/TypeChecking.js","mtime":1620343647684},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0IHsgQWN0aXZlTGFuZ3VnYWVLZXl3b3JkcyB9IGZyb20gJy4uL0NvbXBpbGVyL2NvbnN0YW50cyc7CnZhciBLZXl3b3JkcyA9IFtBY3RpdmVMYW5ndWdhZUtleXdvcmRzLklmLCAn4KSm4KWB4KS54KSw4KS+4KSTJywgQWN0aXZlTGFuZ3VnYWVLZXl3b3Jkcy5XaGlsZSwgQWN0aXZlTGFuZ3VnYWVLZXl3b3Jkcy5QcmludCwgJ+Ckh+CkqOCkquClgeCknycsICfgpLDgpJrgpKjgpL4nLCAn4KSV4KWLJywgJ+CkruClhyddOyAvLyB2YXIgUHJpbnRLZXl3b3JkUmVnZXggPSAiXiIgKyAiKCIgKyBBY3RpdmVMYW5ndWdhZUtleXdvcmRzLlByaW50ICsgIikqJCIKLy8gUHJpbnRLZXl3b3JkUmVnZXggPSBuZXcgUmVnRXhwKFByaW50S2V5d29yZFJlZ2V4KQoKdmFyIE5hdGl2ZU9wZXJhdGlvbnMgPSBbJ+CkuOCkguCkluCljeCkr+CkviddOwoKZnVuY3Rpb24gUmVtb3ZlQnJhY2tldHMoZWxlbWVudCkgewogIHZhciBhID0gZWxlbWVudC5yZXBsYWNlKCcoJywgJycpOwogIHZhciBiID0gYS5yZXBsYWNlKCcpJywgJycpOwogIHZhciBjID0gYi5yZXBsYWNlKCd9JywgJycpOwogIHZhciBkID0gYy5yZXBsYWNlKCd7JywgJycpOwogIHJldHVybiBkOwp9CgpmdW5jdGlvbiBpc0FycmF5T3BlcmF0aW9uKGVsZW1lbnQpIHsKICAvLyBUbyBmaW5kIFBhdHRlcm5zIGxpa2UgQXJyYXlbMl0sIEFycmF5W2luZGV4XSBldGMKICBlbGVtZW50ID0gUmVtb3ZlQnJhY2tldHMoZWxlbWVudCk7CgogIGlmIChlbGVtZW50LmNoYXJBdChlbGVtZW50Lmxlbmd0aCAtIDEpID09ICddJyAmJiBlbGVtZW50LmluY2x1ZGVzKCdbJykgJiYgZWxlbWVudC5jaGFyQXQoMCkgIT0gJ1snKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0KCmV4cG9ydCBmdW5jdGlvbiBpc1ZhcmlhYmxlKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgdmFyIEhpbmRpUmVnZXggPSAvKD86XnxccylbXHUwOTAwLVx1MDk3Rl0rPyg/OlxzfCQpL2c7CiAgICByZXR1cm4gL15bYS16XSskL2kudGVzdChlbGVtZW50KSB8fCBIaW5kaVJlZ2V4LnRlc3QoZWxlbWVudCkgJiYgIUtleXdvcmRzLmluY2x1ZGVzKGVsZW1lbnQpOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgcmV0dXJuIC9eWzAtOV0qJC9nbS50ZXN0KGVsZW1lbnQpOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzT3BlcmF0b3IoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gL14oPXx9fHspKiQvZ20udGVzdChlbGVtZW50KTsKICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBpc0lucHV0KCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgcmV0dXJuIGVsZW1lbnQuaW5jbHVkZXMoJ+Ckh+CkqOCkquClgeCknycpOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzUHJpbnRPcGVyYXRpb24oKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gZWxlbWVudC5pbmNsdWRlcyhBY3RpdmVMYW5ndWdhZUtleXdvcmRzLlByaW50KTsKICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBpc0NvbmRpdGlvbmFsS2V5d29yZCgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50ID09IEFjdGl2ZUxhbmd1Z2FlS2V5d29yZHMuSWYgfHwgZWxlbWVudCA9PSBBY3RpdmVMYW5ndWdhZUtleXdvcmRzLldoaWxlIHx8IGVsZW1lbnQgPT0gJ+CkheCkqOCljeCkr+CkpeCkvic7CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNGb3JMb29wKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgcmV0dXJuIGVsZW1lbnQgPT0gJ+CkpuClgeCkueCksOCkvuCkkyc7CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNXaGlsZUxvb3AoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gZWxlbWVudCA9PSBBY3RpdmVMYW5ndWdhZUtleXdvcmRzLldoaWxlOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb24oKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gZWxlbWVudCA9PSAn4KSw4KSa4KSo4KS+JzsKICB9Owp9IC8vIG5lZWRzIHdvcmsKCmV4cG9ydCBmdW5jdGlvbiBpc0V4cHJlc3Npb24oKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gL1woKFteKV0rKVwpLy50ZXN0KGVsZW1lbnQpIHx8IGVsZW1lbnQuaW5jbHVkZXMoJygpJyk7CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNBcnJheSgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50LmNoYXJBdCgwKSA9PSAnWyc7CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNTZXRBcnJheUluZGV4VmFsdWUoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCBkYXRhLCBpKSB7CiAgICBlbGVtZW50ID0gUmVtb3ZlQnJhY2tldHMoZWxlbWVudCk7CgogICAgaWYgKGlzQXJyYXlPcGVyYXRpb24oZWxlbWVudCkgJiYgZGF0YVtpICsgMV0gPT0gJz0nKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGlmIChpc0FycmF5T3BlcmF0aW9uKGVsZW1lbnQpICYmIChkYXRhW2kgKyAxXSA9PSAnPScgfHwgZGF0YVtpIC0gMV0gPT0gJz0nKSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNFbXB0eUFycmF5SW5pdCgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQsIGRhdGEsIGkpIHsKICAgIHJldHVybiBlbGVtZW50ID09ICc9JyAmJiBkYXRhW2kgKyAxXSA9PSAnW10nOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzaW52YWxpZFN0cmluZygpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIHJldHVybiBlbGVtZW50ID09ICciJyB8fCBlbGVtZW50ID09ICdcJycgfHwgZWxlbWVudCA9PSAnKicgfHwgZWxlbWVudCA9PSAnJCcgfHwgZWxlbWVudCA9PSAnLycgfHwgZWxlbWVudCA9PSAnQCcgfHwgZWxlbWVudCA9PSAnfCcgfHwgZWxlbWVudCA9PSAnLycgfHwgZWxlbWVudCA9PSAnPycgfHwgZWxlbWVudCA9PSAnIycgfHwgZWxlbWVudC5jaGFyQXQoMCkgPT0gJ1wnJyAmJiBlbGVtZW50LmNoYXJBdChlbGVtZW50Lmxlbmd0aCAtIDEpID09ICdcJycgfHwgZWxlbWVudC5jaGFyQXQoMCkgPT0gJyInICYmIGVsZW1lbnQuY2hhckF0KGVsZW1lbnQubGVuZ3RoIC0gMSkgPT0gJyInOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgcmV0dXJuIGVsZW1lbnQuY2hhckF0KDApID09ICdcJycgfHwgZWxlbWVudC5jaGFyQXQoMCkgPT0gJyInICYmICFlbGVtZW50LmluY2x1ZGVzKEFjdGl2ZUxhbmd1Z2FlS2V5d29yZHMuUHJpbnQpOwogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzTmF0aXZlT3BlcmF0aW9uKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgdmFyIGZsYWcgPSBmYWxzZTsKICAgIE5hdGl2ZU9wZXJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHsKICAgICAgaWYgKGVsZW1lbnQuaW5jbHVkZXMoZWwpKSB7CiAgICAgICAgZmxhZyA9IHRydWU7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIGZsYWc7CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNGdW5jdGlvbkNhbGwoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50LCB0b2tlbnMsIGNsZWFuZWRfc291cmNlZGF0YSwgaSkgewogICAgaWYgKCFLZXl3b3Jkcy5pbmNsdWRlcyhjbGVhbmVkX3NvdXJjZWRhdGFbaSAtIDFdKSkgewogICAgICB2YXIgQ2hlY2tGdW5jdGlvbkV4cHJlc3Npb24gPSBlbGVtZW50LnNwbGl0KCcoJyk7CiAgICAgIHZhciB0b2tlbiA9IHRva2Vucy5maW5kKGZ1bmN0aW9uIChlbCkgewogICAgICAgIHJldHVybiBlbC50eXBlID09ICdmdW5jdGlvbicgJiYgZWwudmFsdWUgPT0gQ2hlY2tGdW5jdGlvbkV4cHJlc3Npb25bMF07CiAgICAgIH0pOwogICAgICByZXR1cm4gdG9rZW4gIT0gdW5kZWZpbmVkOwogICAgfQogIH07Cn0="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/TypeChecking.js"],"names":["ActiveLangugaeKeywords","Keywords","If","While","Print","NativeOperations","RemoveBrackets","element","a","replace","b","c","d","isArrayOperation","charAt","length","includes","isVariable","HindiRegex","test","isNumber","isOperator","isInput","isPrintOperation","isConditionalKeyword","isForLoop","isWhileLoop","isFunction","isExpression","isArray","isSetArrayIndexValue","data","i","isEmptyArrayInit","isinvalidString","isString","isNativeOperation","flag","forEach","el","isFunctionCall","tokens","cleaned_sourcedata","CheckFunctionExpression","split","token","find","type","value","undefined"],"mappings":"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","sourcesContent":["import { ActiveLangugaeKeywords, } from '../Compiler/constants';\n\nconst Keywords = [\n    ActiveLangugaeKeywords.If,\n    'दुहराओ',\n    ActiveLangugaeKeywords.While,\n    ActiveLangugaeKeywords.Print,\n    'इनपुट',\n    'रचना',\n    'को',\n    'मे',\n];\n\n// var PrintKeywordRegex = \"^\" + \"(\" + ActiveLangugaeKeywords.Print + \")*$\"\n// PrintKeywordRegex = new RegExp(PrintKeywordRegex)\n\nconst NativeOperations = ['संख्या',];\n\nfunction RemoveBrackets(element) {\n    const a = element.replace('(', '');\n    const b = a.replace(')', '');\n    const c = b.replace('}', '');\n    const d = c.replace('{', '');\n\n    return d;\n}\n\nfunction isArrayOperation(element) {\n    // To find Patterns like Array[2], Array[index] etc\n\n    element = RemoveBrackets(element);\n\n    if (element.charAt(element.length - 1) == ']' && element.includes('[') && element.charAt(0) != '[') {\n        return true;\n    }\n}\n\nexport function isVariable() {\n    return function (element) {\n        const HindiRegex = /(?:^|\\s)[\\u0900-\\u097F]+?(?:\\s|$)/g;\n\n        return /^[a-z]+$/i.test(element) || (HindiRegex.test(element) && !Keywords.includes(element));\n    };\n}\nexport function isNumber() {\n    return function (element) {\n        return /^[0-9]*$/gm.test(element);\n    };\n}\n\nexport function isOperator() {\n    return function (element) {\n        return /^(=|}|{)*$/gm.test(element);\n    };\n}\n\nexport function isInput() {\n    return function (element) {\n        return element.includes('इनपुट');\n    };\n}\n\nexport function isPrintOperation() {\n    return function (element) {\n        return element.includes(ActiveLangugaeKeywords.Print);\n    };\n}\n\nexport function isConditionalKeyword() {\n    return function (element) {\n        return element == ActiveLangugaeKeywords.If || element == ActiveLangugaeKeywords.While || element == 'अन्यथा';\n    };\n}\n\nexport function isForLoop() {\n    return function (element) {\n        return element == 'दुहराओ';\n    };\n}\n\nexport function isWhileLoop() {\n    return function (element) {\n        return element == ActiveLangugaeKeywords.While;\n    };\n}\n\nexport function isFunction() {\n    return function (element) {\n        return element == 'रचना';\n    };\n}\n\n// needs work\nexport function isExpression() {\n    return function (element) {\n        return /\\(([^)]+)\\)/.test(element) || element.includes('()');\n    };\n}\n\nexport function isArray() {\n    return function (element) {\n        return element.charAt(0) == '[';\n    };\n}\n\nexport function isSetArrayIndexValue() {\n    return function (element, data, i) {\n        element = RemoveBrackets(element);\n\n        if (isArrayOperation(element) && data[i + 1] == '=') {\n            return true;\n        } if (isArrayOperation(element) && (data[i + 1] == '=' || data[i - 1] == '=')) {\n            return false;\n        }\n    };\n}\n\nexport function isEmptyArrayInit() {\n    return function (element, data, i) {\n        return element == '=' && data[i + 1] == '[]';\n    };\n}\n\nexport function isinvalidString() {\n    return function (element) {\n        return (\n            element == '\"'\n      || element == '\\''\n      || element == '*'\n      || element == '$'\n      || element == '/'\n      || element == '@'\n      || element == '|'\n      || element == '/'\n      || element == '?'\n      || element == '#'\n      || (element.charAt(0) == '\\'' && element.charAt(element.length - 1) == '\\'')\n      || (element.charAt(0) == '\"' && element.charAt(element.length - 1) == '\"')\n        );\n    };\n}\n\nexport function isString() {\n    return function (element) {\n        return element.charAt(0) == '\\'' || (element.charAt(0) == '\"' && !element.includes(ActiveLangugaeKeywords.Print));\n    };\n}\n\nexport function isNativeOperation() {\n    return function (element) {\n        let flag = false;\n\n        NativeOperations.forEach((el) => {\n            if (element.includes(el)) {\n                flag = true;\n            }\n        });\n\n        return flag;\n    };\n}\n\nexport function isFunctionCall() {\n    return function (element, tokens, cleaned_sourcedata, i) {\n        if (!Keywords.includes(cleaned_sourcedata[i - 1])) {\n            const CheckFunctionExpression = element.split('(');\n\n            const token = tokens.find((el) => el.type == 'function' && el.value == CheckFunctionExpression[0]);\n\n            return token != undefined;\n        }\n    };\n}\n"]}]}