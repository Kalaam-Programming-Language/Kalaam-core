{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js","mtime":1652679641832},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgeyBBY3RpdmVMYW5ndWdhZUtleXdvcmRzIH0gZnJvbSAnLi4vQ29tcGlsZXIvY29uc3RhbnRzJzsKY29uc29sZS5sb2coJ0FjdGl2ZUxhbmd1Z2FlS2V5d29yZHMgREM6JywgQWN0aXZlTGFuZ3VnYWVLZXl3b3Jkcyk7CgpmdW5jdGlvbiBTb3VyY2VEYXRhUmVwbGFjZWZvckVhc3lQYXJzaW5nKGRhdGEpIHsKICB2YXIgX0FLID0gQWN0aXZlTGFuZ3VnYWVLZXl3b3JkczsKICB2YXIga2V5d29yZHMgPSBbX0FLLlByaW50LCAvL1N0aWxsIGhhdmUgdG8gY2hhbmdlIHRoaXMgbWFudWFsbHkgd2hlcmUgUkVHRVggYXJlIGltcGxlbWVudGVkCiAgX0FLLklucHV0LCBfQUsuSWYsIF9BSy5Gb3IsIF9BSy5XaGlsZSwgX0FLLkxlbmd0aCwgX0FLLlB1c2gsIF9BSy5GdW5jdGlvbl07CiAga2V5d29yZHMuZm9yRWFjaChmdW5jdGlvbiAoa3cpIHsKICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoa3cpOwogICAgZGF0YSA9IGRhdGEucmVwbGFjZShyZWdleCwgIiAiLmNvbmNhdChrdywgIiAiKSk7CiAgICBjb25zb2xlLmxvZygnZGF0YTonLCBkYXRhKTsKICB9KTsgLy8gZGF0YSA9IGRhdGEucmVwbGFjZSgv4KSm4KS/4KSW4KS+4KSPL2csICcg4KSm4KS/4KSW4KS+4KSPICcpOwogIC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL+CmpuCnh+CmluCmvuCmky9nLCAnIOCmpuCnh+CmluCmvuCmkyAnKTsKICAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC/gpKbgpL7gpJbgpLXgpL4vZywgJyDgpKbgpL7gpJbgpLXgpL4gJyk7CgogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1woIC9nLCAnKCcpOyAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC9cKS9nLCAnICknKTsKICAvLyAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXCsgL2csICcrJyk7CgogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1w9ICIvZywgJz0iJyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXD0gJy9nLCAnPVwnJyk7IC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1zgpJzgpKzgpKTgpJUvZywgJ+CknOCkrOCkpOCklSAnKTsKICAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSc4KWL4KSq4KSw4KWN4KSv4KSC4KSkL2csICfgpJzgpYvgpKrgpLDgpY3gpK/gpILgpKQgJyk7CiAgLy8gZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCkheCkqOCljeCkr+CkpeCkvnsvZywgJ+CkheCkqOCljeCkr+CkpeCkviB7Jyk7CgogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1xbIC9nLCAnWycpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1wpfS9nLCAnKSB9Jyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXCl7L2csICcpIHsnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cfX0vZywgJ30gfScpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1zgpJXgpYsvZywgJ+CkleCliyAnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSu4KWHey9nLCAn4KSu4KWHIHsnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSF4KSX4KSwL2csICfgpIXgpJfgpLAgJyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCknOCksC9nLCAn4KSc4KSwICcpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoLyg/OlxyXG58XHJ8XG4pL2csICcgJyk7IC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1w9PS9nLCAnID09ICcpOwogIC8vcHJlcGFyaW5nIGRhdGEgZm9yIGVhc3kgcGFyc2luZyBieSBoYW5kbGluZyBuZXcgbGluZXMsIGVudGVycyBldGMuCgogIGRhdGEgPSBkYXRhLnJlcGxhY2UoLyg7fFxufFxyfCcgJ3wgJ3wgIikvZ20sICcnKS5zcGxpdCgnICcpOwogIHJldHVybiBkYXRhOwp9CgpleHBvcnQgeyBTb3VyY2VEYXRhUmVwbGFjZWZvckVhc3lQYXJzaW5nIH07"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js"],"names":["ActiveLangugaeKeywords","console","log","SourceDataReplaceforEasyParsing","data","_AK","keywords","Print","Input","If","For","While","Length","Push","Function","forEach","kw","regex","RegExp","replace","split"],"mappings":";;;;;;;AACA,SAASA,sBAAT,QAAuC,uBAAvC;AACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,sBAA1C;;AAEA,SAASG,+BAAT,CAAyCC,IAAzC,EAA+C;AAE3C,MAAIC,GAAG,GAAGL,sBAAV;AACA,MAAIM,QAAQ,GAAG,CAACD,GAAG,CAACE,KAAL,EAAY;AAC3BF,EAAAA,GAAG,CAACG,KADW,EAEfH,GAAG,CAACI,EAFW,EAGfJ,GAAG,CAACK,GAHW,EAIfL,GAAG,CAACM,KAJW,EAKfN,GAAG,CAACO,MALW,EAMfP,GAAG,CAACQ,IANW,EAOfR,GAAG,CAACS,QAPW,CAAf;AAWAR,EAAAA,QAAQ,CAACS,OAAT,CAAiB,UAACC,EAAD,EAAQ;AAErB,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,EAAX,CAAZ;AAGAZ,IAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAaF,KAAb,aAAwBD,EAAxB,OAAP;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AAGH,GATD,EAd2C,CA0B3C;AACA;AAEA;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CA9B2C,CA+B3C;AACA;;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,OAAb,EAAsB,KAAtB,CAAP,CAlC2C,CAuC3C;AACA;AACA;;AAEAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,iBAAb,EAAgC,GAAhC,CAAP,CAnD2C,CAoD3C;AAEA;;AACAf,EAAAA,IAAI,GAAGA,IAAI,CAACe,OAAL,CAAa,uBAAb,EAAsC,EAAtC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAP;AAEA,SAAOhB,IAAP;AAGH;;AAOD,SAASD,+BAAT","sourcesContent":["\nimport { ActiveLangugaeKeywords } from '../Compiler/constants'\nconsole.log('ActiveLangugaeKeywords DC:', ActiveLangugaeKeywords)\n\nfunction SourceDataReplaceforEasyParsing(data) {\n\n    let _AK = ActiveLangugaeKeywords\n    let keywords = [_AK.Print, //Still have to change this manually where REGEX are implemented\n    _AK.Input,\n    _AK.If,\n    _AK.For,\n    _AK.While,\n    _AK.Length,\n    _AK.Push,\n    _AK.Function,]\n\n\n\n    keywords.forEach((kw) => {\n\n        var regex = new RegExp(kw);\n\n\n        data = data.replace(regex, ` ${kw} `);\n        console.log('data:', data)\n\n\n    })\n\n\n    // data = data.replace(/दिखाए/g, ' दिखाए ');\n    // data = data.replace(/দেখাও/g, ' দেখাও ');\n\n    // data = data.replace(/दाखवा/g, ' दाखवा ');\n    data = data.replace(/\\( /g, '(');\n    // data = data.replace(/\\)/g, ' )');\n    //  data = data.replace(/\\+ /g, '+');\n    data = data.replace(/\\= \"/g, '=\"');\n    data = data.replace(/\\= '/g, '=\\'');\n\n\n\n\n    // data = data.replace(/\\जबतक/g, 'जबतक ');\n    // data = data.replace(/\\जोपर्यंत/g, 'जोपर्यंत ');\n    // data = data.replace(/\\अन्यथा{/g, 'अन्यथा {');\n\n    data = data.replace(/\\[ /g, '[');\n    data = data.replace(/\\)}/g, ') }');\n    data = data.replace(/\\){/g, ') {');\n    data = data.replace(/\\}}/g, '} }');\n    data = data.replace(/\\को/g, 'को ');\n    data = data.replace(/\\मे{/g, 'मे {');\n    data = data.replace(/\\अगर/g, 'अगर ');\n    data = data.replace(/\\जर/g, 'जर ');\n    data = data.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n    // data = data.replace(/\\==/g, ' == ');\n\n    //preparing data for easy parsing by handling new lines, enters etc.\n    data = data.replace(/(;|\\n|\\r|' '| '| \")/gm, '').split(' ');\n\n    return data;\n\n\n}\n\n\n\n\n\n\nexport { SourceDataReplaceforEasyParsing, };"]}]}