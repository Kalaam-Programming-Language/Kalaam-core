{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js","mtime":1652755078251},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgeyBBY3RpdmVMYW5ndWdhZUtleXdvcmRzIH0gZnJvbSAnLi4vQ29tcGlsZXIvY29uc3RhbnRzJzsKCmZ1bmN0aW9uIFNvdXJjZURhdGFSZXBsYWNlZm9yRWFzeVBhcnNpbmcoZGF0YSkgewogIGNvbnNvbGUubG9nKCdkYXRhOicsIGRhdGEpOwogIHZhciBfQUsgPSBBY3RpdmVMYW5ndWdhZUtleXdvcmRzOwogIHZhciBrZXl3b3JkcyA9IFtfQUsuUHJpbnQsIC8vU3RpbGwgaGF2ZSB0byBjaGFuZ2UgdGhpcyBtYW51YWxseSB3aGVyZSBSRUdFWCBhcmUgaW1wbGVtZW50ZWQKICBfQUsuSWYsIF9BSy5Gb3IsIF9BSy5XaGlsZSwgX0FLLkZ1bmN0aW9uXTsKICBrZXl3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uIChrdykgewogICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChrdywgJ2cnKTsKICAgIGRhdGEgPSBkYXRhLnJlcGxhY2UocmVnZXgsICIgIi5jb25jYXQoa3csICIgIikpOwogIH0pOwogIGNvbnNvbGUubG9nKCdkYXRhOicsIGRhdGEpOyAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC/gpKbgpL/gpJbgpL7gpI8vZywgJyDgpKbgpL/gpJbgpL7gpI8gJyk7CiAgLy8gZGF0YSA9IGRhdGEucmVwbGFjZSgv4Kam4KeH4KaW4Ka+4KaTL2csICcg4Kam4KeH4KaW4Ka+4KaTICcpOwogIC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL+CkpuCkvuCkluCkteCkvi9nLCAnIOCkpuCkvuCkluCkteCkviAnKTsKCiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXCggL2csICcoJyk7IC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1wpL2csICcgKScpOwogIC8vICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cKyAvZywgJysnKTsKCiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXD0gIi9nLCAnPSInKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cPSAnL2csICI9JyIpOyAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSc4KSs4KSk4KSVL2csICfgpJzgpKzgpKTgpJUgJyk7CiAgLy8gZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCknOCli+CkquCksOCljeCkr+CkguCkpC9nLCAn4KSc4KWL4KSq4KSw4KWN4KSv4KSC4KSkICcpOwogIC8vIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1zgpIXgpKjgpY3gpK/gpKXgpL57L2csICfgpIXgpKjgpY3gpK/gpKXgpL4geycpOwoKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cWyAvZywgJ1snKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9cKX0vZywgJykgfScpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1wpey9nLCAnKSB7Jyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXH19L2csICd9IH0nKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC9c4KSV4KWLL2csICfgpJXgpYsgJyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCkruClh3svZywgJ+CkruClhyB7Jyk7CiAgZGF0YSA9IGRhdGEucmVwbGFjZSgvXOCkheCkl+CksC9nLCAn4KSF4KSX4KSwICcpOwogIGRhdGEgPSBkYXRhLnJlcGxhY2UoL1zgpJzgpLAvZywgJ+CknOCksCAnKTsKICBkYXRhID0gZGF0YS5yZXBsYWNlKC8oPzpcclxufFxyfFxuKS9nLCAnICcpOyAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC9cPT0vZywgJyA9PSAnKTsKICAvL3ByZXBhcmluZyBkYXRhIGZvciBlYXN5IHBhcnNpbmcgYnkgaGFuZGxpbmcgbmV3IGxpbmVzLCBlbnRlcnMgZXRjLgoKICBkYXRhID0gZGF0YS5yZXBsYWNlKC8oO3xcbnxccnwnICd8ICd8ICIpL2dtLCAnJykuc3BsaXQoJyAnKTsKICBjb25zb2xlLmxvZygnZGF0YTonLCBkYXRhKTsKICByZXR1cm4gZGF0YTsKfQoKZXhwb3J0IHsgU291cmNlRGF0YVJlcGxhY2Vmb3JFYXN5UGFyc2luZyB9Ow=="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/DataCleaning.js"],"names":["ActiveLangugaeKeywords","SourceDataReplaceforEasyParsing","data","console","log","_AK","keywords","Print","If","For","While","Function","forEach","kw","regex","RegExp","replace","split"],"mappings":";;;;;;;AAAA,SAASA,sBAAT,QAAuC,uBAAvC;;AAEA,SAASC,+BAAT,CAAyCC,IAAzC,EAA+C;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACA,MAAIG,GAAG,GAAGL,sBAAV;AACA,MAAIM,QAAQ,GAAG,CACbD,GAAG,CAACE,KADS,EACF;AACXF,EAAAA,GAAG,CAACG,EAFS,EAGbH,GAAG,CAACI,GAHS,EAIbJ,GAAG,CAACK,KAJS,EAKbL,GAAG,CAACM,QALS,CAAf;AAQAL,EAAAA,QAAQ,CAACM,OAAT,CAAiB,UAACC,EAAD,EAAQ;AACvB,QAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAWF,EAAX,EAAe,GAAf,CAAZ;AAEAX,IAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAaF,KAAb,aAAwBD,EAAxB,OAAP;AACD,GAJD;AAKAV,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB,EAhB6C,CAkB7C;AACA;AAEA;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAtB6C,CAuB7C;AACA;;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP,CA1B6C,CA4B7C;AACA;AACA;;AAEAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,MAAb,EAAqB,KAArB,CAAP;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,iBAAb,EAAgC,GAAhC,CAAP,CAxC6C,CAyC7C;AAEA;;AACAd,EAAAA,IAAI,GAAGA,IAAI,CAACc,OAAL,CAAa,uBAAb,EAAsC,EAAtC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAP;AAEAd,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AAEA,SAAOA,IAAP;AACD;;AAED,SAASD,+BAAT","sourcesContent":["import { ActiveLangugaeKeywords } from '../Compiler/constants';\n\nfunction SourceDataReplaceforEasyParsing(data) {\n  console.log('data:', data);\n  let _AK = ActiveLangugaeKeywords;\n  let keywords = [\n    _AK.Print, //Still have to change this manually where REGEX are implemented\n    _AK.If,\n    _AK.For,\n    _AK.While,\n    _AK.Function,\n  ];\n\n  keywords.forEach((kw) => {\n    var regex = new RegExp(kw, 'g');\n\n    data = data.replace(regex, ` ${kw} `);\n  });\n  console.log('data:', data);\n\n  // data = data.replace(/दिखाए/g, ' दिखाए ');\n  // data = data.replace(/দেখাও/g, ' দেখাও ');\n\n  // data = data.replace(/दाखवा/g, ' दाखवा ');\n  data = data.replace(/\\( /g, '(');\n  // data = data.replace(/\\)/g, ' )');\n  //  data = data.replace(/\\+ /g, '+');\n  data = data.replace(/\\= \"/g, '=\"');\n  data = data.replace(/\\= '/g, \"='\");\n\n  // data = data.replace(/\\जबतक/g, 'जबतक ');\n  // data = data.replace(/\\जोपर्यंत/g, 'जोपर्यंत ');\n  // data = data.replace(/\\अन्यथा{/g, 'अन्यथा {');\n\n  data = data.replace(/\\[ /g, '[');\n  data = data.replace(/\\)}/g, ') }');\n  data = data.replace(/\\){/g, ') {');\n  data = data.replace(/\\}}/g, '} }');\n  data = data.replace(/\\को/g, 'को ');\n  data = data.replace(/\\मे{/g, 'मे {');\n  data = data.replace(/\\अगर/g, 'अगर ');\n  data = data.replace(/\\जर/g, 'जर ');\n  data = data.replace(/(?:\\r\\n|\\r|\\n)/g, ' ');\n  // data = data.replace(/\\==/g, ' == ');\n\n  //preparing data for easy parsing by handling new lines, enters etc.\n  data = data.replace(/(;|\\n|\\r|' '| '| \")/gm, '').split(' ');\n\n  console.log('data:', data);\n\n  return data;\n}\n\nexport { SourceDataReplaceforEasyParsing };\n"]}]}