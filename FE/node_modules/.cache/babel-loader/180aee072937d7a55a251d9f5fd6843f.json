{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/utils/uid.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/utils/uid.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS1idWZmZXIuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nIjsKCi8qKgogKiBCYXNlZCBvbiB0aGUgd29yayBvZiBodHRwczovL2dpdGh1Yi5jb20vamNob29rL3V1aWQtcmFuZG9tCiAqLwp2YXIgYnVmLAogICAgYnVmSWR4ID0gMDsKdmFyIGhleEJ5dGVzID0gbmV3IEFycmF5KDI1Nik7IC8vIFByZS1jYWxjdWxhdGUgdG9TdHJpbmcoMTYpIGZvciBzcGVlZAoKZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7IGkrKykgewogIGhleEJ5dGVzW2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTsKfSAvLyBVc2UgYmVzdCBhdmFpbGFibGUgUFJORwoKCnZhciByYW5kb21CeXRlcyA9IGZ1bmN0aW9uICgpIHsKICAvLyBOb2RlICYgQnJvd3NlciBzdXBwb3J0CiAgdmFyIGxpYiA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnID8gY3J5cHRvIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cubXNDcnlwdG8gLy8gSUUxMQogIDogdm9pZCAwOwoKICBpZiAobGliICE9PSB2b2lkIDApIHsKICAgIGlmIChsaWIucmFuZG9tQnl0ZXMgIT09IHZvaWQgMCkgewogICAgICByZXR1cm4gbGliLnJhbmRvbUJ5dGVzOwogICAgfQoKICAgIGlmIChsaWIuZ2V0UmFuZG9tVmFsdWVzICE9PSB2b2lkIDApIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChuKSB7CiAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkobik7CiAgICAgICAgbGliLmdldFJhbmRvbVZhbHVlcyhieXRlcyk7CiAgICAgICAgcmV0dXJuIGJ5dGVzOwogICAgICB9OwogICAgfQogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uIChuKSB7CiAgICB2YXIgciA9IFtdOwoKICAgIGZvciAodmFyIF9pID0gbjsgX2kgPiAwOyBfaS0tKSB7CiAgICAgIHIucHVzaChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyNTYpKTsKICAgIH0KCiAgICByZXR1cm4gcjsKICB9Owp9KCk7IC8vIEJ1ZmZlciByYW5kb20gbnVtYmVycyBmb3Igc3BlZWQKLy8gUmVkdWNlIG1lbW9yeSB1c2FnZSBieSBkZWNyZWFzaW5nIHRoaXMgbnVtYmVyIChtaW4gMTYpCi8vIG9yIGltcHJvdmUgc3BlZWQgYnkgaW5jcmVhc2luZyB0aGlzIG51bWJlciAodHJ5IDE2Mzg0KQoKCnZhciBCVUZGRVJfU0laRSA9IDQwOTY7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHsKICAvLyBCdWZmZXIgc29tZSByYW5kb20gYnl0ZXMgZm9yIHNwZWVkCiAgaWYgKGJ1ZiA9PT0gdm9pZCAwIHx8IGJ1ZklkeCArIDE2ID4gQlVGRkVSX1NJWkUpIHsKICAgIGJ1ZklkeCA9IDA7CiAgICBidWYgPSByYW5kb21CeXRlcyhCVUZGRVJfU0laRSk7CiAgfQoKICB2YXIgYiA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGJ1ZiwgYnVmSWR4LCBidWZJZHggKz0gMTYpOwogIGJbNl0gPSBiWzZdICYgMHgwZiB8IDB4NDA7CiAgYls4XSA9IGJbOF0gJiAweDNmIHwgMHg4MDsKICByZXR1cm4gaGV4Qnl0ZXNbYlswXV0gKyBoZXhCeXRlc1tiWzFdXSArIGhleEJ5dGVzW2JbMl1dICsgaGV4Qnl0ZXNbYlszXV0gKyAnLScgKyBoZXhCeXRlc1tiWzRdXSArIGhleEJ5dGVzW2JbNV1dICsgJy0nICsgaGV4Qnl0ZXNbYls2XV0gKyBoZXhCeXRlc1tiWzddXSArICctJyArIGhleEJ5dGVzW2JbOF1dICsgaGV4Qnl0ZXNbYls5XV0gKyAnLScgKyBoZXhCeXRlc1tiWzEwXV0gKyBoZXhCeXRlc1tiWzExXV0gKyBoZXhCeXRlc1tiWzEyXV0gKyBoZXhCeXRlc1tiWzEzXV0gKyBoZXhCeXRlc1tiWzE0XV0gKyBoZXhCeXRlc1tiWzE1XV07Cn0="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/utils/uid.js"],"names":["buf","bufIdx","hexBytes","Array","i","toString","substr","randomBytes","lib","crypto","window","msCrypto","getRandomValues","n","bytes","Uint8Array","r","push","Math","floor","random","BUFFER_SIZE","b","prototype","slice","call"],"mappings":"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","sourcesContent":["/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\n\nlet\n  buf,\n  bufIdx = 0\nconst hexBytes = new Array(256)\n\n// Pre-calculate toString(16) for speed\nfor (let i = 0; i < 256; i++) {\n  hexBytes[i] = (i + 0x100).toString(16).substr(1)\n}\n\n// Use best available PRNG\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined'\n    ? crypto\n    : (\n      typeof window !== 'undefined'\n        ? window.msCrypto // IE11\n        : void 0\n    )\n\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes\n    }\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        var bytes = new Uint8Array(n)\n        lib.getRandomValues(bytes)\n        return bytes\n      }\n    }\n  }\n\n  return n => {\n    const r = []\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256))\n    }\n    return r\n  }\n})()\n\n// Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\nconst BUFFER_SIZE = 4096\n\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || (bufIdx + 16 > BUFFER_SIZE)) {\n    bufIdx = 0\n    buf = randomBytes(BUFFER_SIZE)\n  }\n\n  const b = Array.prototype.slice.call(buf, bufIdx, (bufIdx += 16))\n  b[6] = (b[6] & 0x0f) | 0x40\n  b[8] = (b[8] & 0x3f) | 0x80\n\n  return hexBytes[b[0]] + hexBytes[b[1]] +\n    hexBytes[b[2]] + hexBytes[b[3]] + '-' +\n    hexBytes[b[4]] + hexBytes[b[5]] + '-' +\n    hexBytes[b[6]] + hexBytes[b[7]] + '-' +\n    hexBytes[b[8]] + hexBytes[b[9]] + '-' +\n    hexBytes[b[10]] + hexBytes[b[11]] +\n    hexBytes[b[12]] + hexBytes[b[13]] +\n    hexBytes[b[14]] + hexBytes[b[15]]\n}\n"]}]}