{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-selection.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-selection.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHNlbGVjdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJ25vbmUnLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2KSB7CiAgICAgICAgcmV0dXJuIFsnc2luZ2xlJywgJ211bHRpcGxlJywgJ25vbmUnXS5pbmNsdWRlcyh2KTsKICAgICAgfQogICAgfSwKICAgIHNlbGVjdGVkOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNlbGVjdGVkS2V5czogZnVuY3Rpb24gc2VsZWN0ZWRLZXlzKCkgewogICAgICB2YXIga2V5cyA9IHt9OwogICAgICB0aGlzLnNlbGVjdGVkLm1hcCh0aGlzLmdldFJvd0tleSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAga2V5c1trZXldID0gdHJ1ZTsKICAgICAgfSk7CiAgICAgIHJldHVybiBrZXlzOwogICAgfSwKICAgIGhhc1NlbGVjdGlvbk1vZGU6IGZ1bmN0aW9uIGhhc1NlbGVjdGlvbk1vZGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdGlvbiAhPT0gJ25vbmUnOwogICAgfSwKICAgIHNpbmdsZVNlbGVjdGlvbjogZnVuY3Rpb24gc2luZ2xlU2VsZWN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb24gPT09ICdzaW5nbGUnOwogICAgfSwKICAgIG11bHRpcGxlU2VsZWN0aW9uOiBmdW5jdGlvbiBtdWx0aXBsZVNlbGVjdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uID09PSAnbXVsdGlwbGUnOwogICAgfSwKICAgIGFsbFJvd3NTZWxlY3RlZDogZnVuY3Rpb24gYWxsUm93c1NlbGVjdGVkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMuY29tcHV0ZWRSb3dzLmxlbmd0aCA+IDAgJiYgdGhpcy5jb21wdXRlZFJvd3MuZXZlcnkoZnVuY3Rpb24gKHJvdykgewogICAgICAgIHJldHVybiBfdGhpcy5zZWxlY3RlZEtleXNbX3RoaXMuZ2V0Um93S2V5KHJvdyldID09PSB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICBzb21lUm93c1NlbGVjdGVkOiBmdW5jdGlvbiBzb21lUm93c1NlbGVjdGVkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLmFsbFJvd3NTZWxlY3RlZCAhPT0gdHJ1ZSAmJiB0aGlzLmNvbXB1dGVkUm93cy5zb21lKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnNlbGVjdGVkS2V5c1tfdGhpczIuZ2V0Um93S2V5KHJvdyldID09PSB0cnVlOwogICAgICB9KTsKICAgIH0sCiAgICByb3dzU2VsZWN0ZWROdW1iZXI6IGZ1bmN0aW9uIHJvd3NTZWxlY3RlZE51bWJlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWQubGVuZ3RoOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaXNSb3dTZWxlY3RlZDogZnVuY3Rpb24gaXNSb3dTZWxlY3RlZChrZXkpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRLZXlzW2tleV0gPT09IHRydWU7CiAgICB9LAogICAgY2xlYXJTZWxlY3Rpb246IGZ1bmN0aW9uIGNsZWFyU2VsZWN0aW9uKCkgewogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0ZWQnLCBbXSk7CiAgICB9LAogICAgX191cGRhdGVTZWxlY3Rpb246IGZ1bmN0aW9uIF9fdXBkYXRlU2VsZWN0aW9uKGtleXMsIHJvd3MsIGFkZGVkLCBldnQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRlbWl0KCdzZWxlY3Rpb24nLCB7CiAgICAgICAgcm93czogcm93cywKICAgICAgICBhZGRlZDogYWRkZWQsCiAgICAgICAga2V5czoga2V5cywKICAgICAgICBldnQ6IGV2dAogICAgICB9KTsKICAgICAgdmFyIHBheWxvYWQgPSB0aGlzLnNpbmdsZVNlbGVjdGlvbiA9PT0gdHJ1ZSA/IGFkZGVkID09PSB0cnVlID8gcm93cyA6IFtdIDogYWRkZWQgPT09IHRydWUgPyB0aGlzLnNlbGVjdGVkLmNvbmNhdChyb3dzKSA6IHRoaXMuc2VsZWN0ZWQuZmlsdGVyKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICByZXR1cm4ga2V5cy5pbmNsdWRlcyhfdGhpczMuZ2V0Um93S2V5KHJvdykpID09PSBmYWxzZTsKICAgICAgfSk7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3RlZCcsIHBheWxvYWQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/table/table-row-selection.js"],"names":["props","selection","type","String","validator","v","includes","selected","Array","computed","selectedKeys","keys","map","getRowKey","forEach","key","hasSelectionMode","singleSelection","multipleSelection","allRowsSelected","computedRows","length","every","row","someRowsSelected","some","rowsSelectedNumber","methods","isRowSelected","clearSelection","$emit","__updateSelection","rows","added","evt","payload","concat","filter"],"mappings":"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","sourcesContent":["export default {\n  props: {\n    selection: {\n      type: String,\n      default: 'none',\n      validator: v => ['single', 'multiple', 'none'].includes(v)\n    },\n    selected: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  computed: {\n    selectedKeys () {\n      const keys = {}\n      this.selected.map(this.getRowKey).forEach(key => {\n        keys[key] = true\n      })\n      return keys\n    },\n\n    hasSelectionMode () {\n      return this.selection !== 'none'\n    },\n\n    singleSelection () {\n      return this.selection === 'single'\n    },\n\n    multipleSelection () {\n      return this.selection === 'multiple'\n    },\n\n    allRowsSelected () {\n      return this.computedRows.length > 0 && this.computedRows.every(\n        row => this.selectedKeys[ this.getRowKey(row) ] === true\n      )\n    },\n\n    someRowsSelected () {\n      return this.allRowsSelected !== true &&\n        this.computedRows.some(row => this.selectedKeys[ this.getRowKey(row) ] === true)\n    },\n\n    rowsSelectedNumber () {\n      return this.selected.length\n    }\n  },\n\n  methods: {\n    isRowSelected (key) {\n      return this.selectedKeys[key] === true\n    },\n\n    clearSelection () {\n      this.$emit('update:selected', [])\n    },\n\n    __updateSelection (keys, rows, added, evt) {\n      this.$emit('selection', { rows, added, keys, evt })\n\n      const payload = this.singleSelection === true\n        ? (added === true ? rows : [])\n        : (\n          added === true\n            ? this.selected.concat(rows)\n            : this.selected.filter(\n              row => keys.includes(this.getRowKey(row)) === false\n            )\n        )\n\n      this.$emit('update:selected', payload)\n    }\n  }\n}\n"]}]}