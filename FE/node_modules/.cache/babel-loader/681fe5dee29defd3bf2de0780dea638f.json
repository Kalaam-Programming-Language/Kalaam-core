{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/AdvancedTypeChecking.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/AdvancedTypeChecking.js","mtime":1620343647684},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwpleHBvcnQgZnVuY3Rpb24gaXNQdXJlRXZhbCgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIGlmICgvXihbLStdP1swLTldKlwuP1swLTldK1tcL1wrXC1cKl0pKyhbLStdP1swLTldKlwuP1swLTldKykqJC9nbS50ZXN0KGVsZW1lbnQpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0gLy9pZiBwYXJzZXIgZW5jb3VudGVycyBhbnl0aGluZyBsaWtlICgiIG9yICgsIHRoZW4gdGhhdCdzIGEgcmVhbHRpbWUgcHJpbnQuIAovL2J1aWxkc3RyaW5nIHdpbGwgYmUgYXBwbGllZCBub3cgdG8gY3JlYXRlIGEgc3RyaW5nIGFuZCBwdXNoIGl0IGludG8gdG9rZW5zCgpleHBvcnQgZnVuY3Rpb24gaXNSZWFsVGltZVByaW50TXVsdGlwbGVTdHJpbmcoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICB2YXIgY29uZGl0aW9uU3RhcnQgPSBlbGVtZW50LmNoYXJBdCgwKTsKICAgIHZhciBsYXN0Q2hhciA9IGVsZW1lbnQuY2hhckF0KGVsZW1lbnQubGVuZ3RoIC0gMSk7IC8vVEhFIFByaW5jaXBsZSBjb25kaXRpb24gdG8gcHJvY2VlZCBidWlsZGluZyBhIHN0cmluZyBhZnRlciBpZGVudGlmeXRpbmcgaXQgYXMgYSBwb3RlbnRpYWwgcmVhbHRpbWVzdHJpbmcgICAKCiAgICBpZiAoY29uZGl0aW9uU3RhcnQgPT0gJygnICYmIGxhc3RDaGFyICE9ICcpJyB8fCBlbGVtZW50LmluY2x1ZGVzKCcoIicpIHx8IGVsZW1lbnQuaW5jbHVkZXMoJyhcJycpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nYW5kVmFsdWUoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICB2YXIgeCA9IGVsZW1lbnQ7CgogICAgaWYgKHguaW5jbHVkZXMoJyInKSAmJiB4LmluY2x1ZGVzKCcrJykpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNDYWxjdWxhdGlvbigpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIGlmICgoZWxlbWVudC5pbmNsdWRlcygnKycpIHx8IGVsZW1lbnQuaW5jbHVkZXMoJyUnKSB8fCBlbGVtZW50LmluY2x1ZGVzKCctJykgfHwgZWxlbWVudC5pbmNsdWRlcygnKicpIHx8IGVsZW1lbnQuaW5jbHVkZXMoJy8nKSkgJiYgIWVsZW1lbnQuaW5jbHVkZXMoJ1snKSAmJiAoZWxlbWVudC5pbmNsdWRlcygnKCcpICYmIGVsZW1lbnQuaW5jbHVkZXMoJyknKSB8fCAhZWxlbWVudC5pbmNsdWRlcygnKCcpICYmICFlbGVtZW50LmluY2x1ZGVzKCcpJykpICYmIGVsZW1lbnQuY2hhckF0KGVsZW1lbnQubGVuZ3RoIC0gMSkgIT0gJysnICYmIChlbGVtZW50LmNoYXJBdCgwKSAhPSAnLycgfHwgZWxlbWVudC5jaGFyQXQoMCkgIT0gJyonKSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBpc0RpcmVjdFByaW50QXJpdGhtZXRpYygpIHsKICByZXR1cm4gZnVuY3Rpb24gKHRva2VuKSB7CiAgICBpZiAodG9rZW4uaW5jbHVkZXMoJysnKSB8fCB0b2tlbi5pbmNsdWRlcygnLScpIHx8IHRva2VuLmluY2x1ZGVzKCcqJykgfHwgdG9rZW4uaW5jbHVkZXMoJy8nKSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Owp9"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-core/TypeCheck/AdvancedTypeChecking.js"],"names":["isPureEval","element","test","isRealTimePrintMultipleString","conditionStart","charAt","lastChar","length","includes","isStringandValue","x","isCalculation","isDirectPrintArithmetic","token"],"mappings":";;AAEA,OAAO,SAASA,UAAT,GAAqB;AAGxB,SAAO,UAASC,OAAT,EAAiB;AAEpB,QAAG,+DAA+DC,IAA/D,CAAoED,OAApE,CAAH,EACA;AAEI,aAAO,IAAP;AAEH;AACJ,GARD;AAUH,C,CAKD;AACA;;AAEA,OAAO,SAASE,6BAAT,GAAyC;AAG5C,SAAO,UAASF,OAAT,EAAiB;AAGpB,QAAIG,cAAc,GAACH,OAAO,CAACI,MAAR,CAAe,CAAf,CAAnB;AACA,QAAIC,QAAQ,GAACL,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAe,CAA9B,CAAb,CAJoB,CAQpB;;AAEA,QAAKH,cAAc,IAAE,GAAhB,IAAuBE,QAAQ,IAAE,GAAlC,IAA2CL,OAAO,CAACO,QAAR,CAAiB,IAAjB,KAA0BP,OAAO,CAACO,QAAR,CAAiB,KAAjB,CAAzE,EACA;AAII,aAAO,IAAP;AAEH;AAEJ,GAnBD;AAoBH;AAGD,OAAO,SAASC,gBAAT,GAA4B;AAE/B,SAAO,UAASR,OAAT,EAAiB;AAEpB,QAAIS,CAAC,GAACT,OAAN;;AAIA,QAAGS,CAAC,CAACF,QAAF,CAAW,GAAX,KAAiBE,CAAC,CAACF,QAAF,CAAW,GAAX,CAApB,EACA;AAGI,aAAO,IAAP;AACH;AAIJ,GAfD;AAgBH;AAID,OAAO,SAASG,aAAT,GAAyB;AAE5B,SAAO,UAASV,OAAT,EAAiB;AAEpB,QAAI,CAACA,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAA0BP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA1B,IAAmDP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAnD,IAA4EP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA5E,IAAqGP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAtG,KAAgI,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAjI,KAA4JP,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAAwBP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAzB,IAAoD,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAD,IAAyB,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAzO,KAAsQP,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAe,CAA9B,KAAkC,GAAxS,KAAgTN,OAAO,CAACI,MAAR,CAAe,CAAf,KAAmB,GAAnB,IAA0BJ,OAAO,CAACI,MAAR,CAAe,CAAf,KAAmB,GAA7V,CAAJ,EAAwW;AAEpW,aAAO,IAAP;AACH;AAEJ,GAPD;AAQH;AAED,OAAO,SAASO,uBAAT,GAAkC;AAErC,SAAO,UAASC,KAAT,EAAe;AAClB,QAAMA,KAAK,CAACL,QAAN,CAAe,GAAf,KAAuBK,KAAK,CAACL,QAAN,CAAe,GAAf,CAAvB,IAA8CK,KAAK,CAACL,QAAN,CAAe,GAAf,CAA9C,IAAqEK,KAAK,CAACL,QAAN,CAAe,GAAf,CAA3E,EACA;AAEI,aAAO,IAAP;AACH;AAEJ,GAPD;AAQH","sourcesContent":["\n\nexport function isPureEval(){\n\n\n    return function(element){\n\n        if(/^([-+]?[0-9]*\\.?[0-9]+[\\/\\+\\-\\*])+([-+]?[0-9]*\\.?[0-9]+)*$/gm.test(element))\n        {\n    \n            return true;\n    \n        }\n    };\n    \n}\n    \n    \n            \n    \n//if parser encounters anything like (\" or (, then that's a realtime print. \n//buildstring will be applied now to create a string and push it into tokens\n    \nexport function isRealTimePrintMultipleString (){\n    \n    \n    return function(element){\n    \n    \n        let conditionStart=element.charAt(0);\n        let lastChar=element.charAt(element.length-1);\n    \n    \n                    \n        //THE Principle condition to proceed building a string after identifyting it as a potential realtimestring   \n    \n        if(((conditionStart=='(' && lastChar!=')') || (element.includes('(\"') || element.includes('(\\'') )))\n        {\n    \n    \n    \n            return true;\n    \n        }\n    \n    };\n}\n    \n    \nexport function isStringandValue (){\n    \n    return function(element){\n\n        let x=element;\n    \n    \n    \n        if(x.includes('\"')&&x.includes('+'))\n        {\n    \n    \n            return true;\n        }\n    \n    \n    \n    };\n}\n    \n    \n                \nexport function isCalculation() {\n\n    return function(element){\n\n        if ((element.includes('+')  || element.includes('%') || element.includes('-') || element.includes('*') || element.includes('/')) && !element.includes('[') && ((element.includes('(')&& element.includes(')')) || (!element.includes('(')&& !element.includes(')')) ) &&  element.charAt(element.length-1)!='+' && (element.charAt(0)!='/' || element.charAt(0)!='*' )) {\n\n            return true;\n        }\n\n    };\n}\n\nexport function isDirectPrintArithmetic(){\n\n    return function(token){\n        if( ( token.includes('+') || token.includes('-') || token.includes('*') || token.includes('/') )  )\n        {\n\n            return true;\n        }\n\n    };\n}"]}]}