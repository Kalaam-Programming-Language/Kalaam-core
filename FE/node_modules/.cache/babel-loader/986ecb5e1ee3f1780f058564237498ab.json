{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/finders.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/finders.js","mtime":1620343647682},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgeyBHZXRjbGVhbmVkRXhwcmVzc2lvbiB9IGZyb20gJy4uL1NjcmlwdHMvbWFpbic7CgpmdW5jdGlvbiBmaW5kdG9rZW5Qb3NpdGlvbmluQ29kZShzb3VyY2UsIG15Y29kZSwgc2hvdWRsY2xlYW4pIHsKICBteWNvZGUgPSBzaG91ZGxjbGVhbiA/IEdldGNsZWFuZWRFeHByZXNzaW9uKG15Y29kZSkgOiBteWNvZGU7CgogIGZvciAodmFyIHggPSAwOyB4IDwgc291cmNlLmxlbmd0aDsgeCsrKSB7CiAgICBzb3VyY2VbeF0gPSBzaG91ZGxjbGVhbiA/IEdldGNsZWFuZWRFeHByZXNzaW9uKHNvdXJjZVt4XSkgOiBzb3VyY2VbeF07CgogICAgaWYgKHNvdXJjZVt4XS5pbmNsdWRlcyhteWNvZGUpKSB7CiAgICAgIHJldHVybiB4ICsgMTsKICAgIH0KICB9Cn0KCmV4cG9ydCB7IGZpbmR0b2tlblBvc2l0aW9uaW5Db2RlIH07"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/Scripts/finders.js"],"names":["GetcleanedExpression","findtokenPositioninCode","source","mycode","shoudlclean","x","length","includes"],"mappings":";;AAAA,SAASA,oBAAT,QAAsC,iBAAtC;;AAEA,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,WAAjD,EAA8D;AAC1DD,EAAAA,MAAM,GAAGC,WAAW,GAAGJ,oBAAoB,CAACG,MAAD,CAAvB,GAAkCA,MAAtD;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCH,IAAAA,MAAM,CAACG,CAAD,CAAN,GAAYD,WAAW,GAAGJ,oBAAoB,CAACE,MAAM,CAACG,CAAD,CAAP,CAAvB,GAAqCH,MAAM,CAACG,CAAD,CAAlE;;AAEA,QAAIH,MAAM,CAACG,CAAD,CAAN,CAAUE,QAAV,CAAmBJ,MAAnB,CAAJ,EAAgC;AAC5B,aAAOE,CAAC,GAAG,CAAX;AACH;AACJ;AACJ;;AAED,SAASJ,uBAAT","sourcesContent":["import { GetcleanedExpression, } from '../Scripts/main';\n\nfunction findtokenPositioninCode(source, mycode, shoudlclean) {\n    mycode = shoudlclean ? GetcleanedExpression(mycode) : mycode;\n\n    for (let x = 0; x < source.length; x++) {\n        source[x] = shoudlclean ? GetcleanedExpression(source[x]) : source[x];\n\n        if (source[x].includes(mycode)) {\n            return x + 1;\n        }\n    }\n}\n\nexport { findtokenPositioninCode, };\n"]}]}