{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/badge/QBadge.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/badge/QBadge.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5kZWZpbmUtcHJvcGVydGllcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5kZWZpbmUtcHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9qb25ueS9EZXNrdG9wL215UHJvamVjdHMvS2FsYWFtLUJFL0ZFL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBMaXN0ZW5lcnNNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvbGlzdGVuZXJzLmpzJzsKaW1wb3J0IHsgc2xvdCB9IGZyb20gJy4uLy4uL3V0aWxzL3Nsb3QuanMnOwpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBuYW1lOiAnUUJhZGdlJywKICBtaXhpbnM6IFtMaXN0ZW5lcnNNaXhpbl0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiBTdHJpbmcsCiAgICB0ZXh0Q29sb3I6IFN0cmluZywKICAgIGZsb2F0aW5nOiBCb29sZWFuLAogICAgdHJhbnNwYXJlbnQ6IEJvb2xlYW4sCiAgICBtdWx0aUxpbmU6IEJvb2xlYW4sCiAgICBvdXRsaW5lOiBCb29sZWFuLAogICAgbGFiZWw6IFtOdW1iZXIsIFN0cmluZ10sCiAgICBhbGlnbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHYpIHsKICAgICAgICByZXR1cm4gWyd0b3AnLCAnbWlkZGxlJywgJ2JvdHRvbSddLmluY2x1ZGVzKHYpOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc3R5bGU6IGZ1bmN0aW9uIHN0eWxlKCkgewogICAgICBpZiAodGhpcy5hbGlnbiAhPT0gdm9pZCAwKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHZlcnRpY2FsQWxpZ246IHRoaXMuYWxpZ24KICAgICAgICB9OwogICAgICB9CiAgICB9LAogICAgY2xhc3NlczogZnVuY3Rpb24gY2xhc3NlcygpIHsKICAgICAgdmFyIHRleHQgPSB0aGlzLm91dGxpbmUgPT09IHRydWUgPyB0aGlzLmNvbG9yIHx8IHRoaXMudGV4dENvbG9yIDogdGhpcy50ZXh0Q29sb3I7CiAgICAgIHJldHVybiAncS1iYWRnZSBmbGV4IGlubGluZSBpdGVtcy1jZW50ZXIgbm8td3JhcCcgKyAiIHEtYmFkZ2UtLSIuY29uY2F0KHRoaXMubXVsdGlMaW5lID09PSB0cnVlID8gJ211bHRpJyA6ICdzaW5nbGUnLCAiLWxpbmUiKSArICh0aGlzLm91dGxpbmUgPT09IHRydWUgPyAnIHEtYmFkZ2UtLW91dGxpbmUnIDogdGhpcy5jb2xvciAhPT0gdm9pZCAwID8gIiBiZy0iLmNvbmNhdCh0aGlzLmNvbG9yKSA6ICcnKSArICh0ZXh0ICE9PSB2b2lkIDAgPyAiIHRleHQtIi5jb25jYXQodGV4dCkgOiAnJykgKyAodGhpcy5mbG9hdGluZyA9PT0gdHJ1ZSA/ICcgcS1iYWRnZS0tZmxvYXRpbmcnIDogJycpICsgKHRoaXMudHJhbnNwYXJlbnQgPT09IHRydWUgPyAnIHEtYmFkZ2UtLXRyYW5zcGFyZW50JyA6ICcnKTsKICAgIH0sCiAgICBhdHRyczogZnVuY3Rpb24gYXR0cnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgcm9sZTogJ2FsZXJ0JywKICAgICAgICAnYXJpYS1sYWJlbCc6IHRoaXMubGFiZWwKICAgICAgfTsKICAgIH0KICB9LAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGgpIHsKICAgIHJldHVybiBoKCdkaXYnLCB7CiAgICAgIHN0eWxlOiB0aGlzLnN0eWxlLAogICAgICAiY2xhc3MiOiB0aGlzLmNsYXNzZXMsCiAgICAgIGF0dHJzOiB0aGlzLmF0dHJzLAogICAgICBvbjogX29iamVjdFNwcmVhZCh7fSwgdGhpcy5xTGlzdGVuZXJzKQogICAgfSwgdGhpcy5sYWJlbCAhPT0gdm9pZCAwID8gW3RoaXMubGFiZWxdIDogc2xvdCh0aGlzLCAnZGVmYXVsdCcpKTsKICB9Cn0pOw=="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/components/badge/QBadge.js"],"names":["Vue","ListenersMixin","slot","extend","name","mixins","props","color","String","textColor","floating","Boolean","transparent","multiLine","outline","label","Number","align","type","validator","v","includes","computed","style","verticalAlign","classes","text","attrs","role","render","h","on","qListeners"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,SAASC,IAAT,QAAqB,qBAArB;AAEA,eAAeF,GAAG,CAACG,MAAJ,CAAW;AACxBC,EAAAA,IAAI,EAAE,QADkB;AAGxBC,EAAAA,MAAM,EAAE,CAAEJ,cAAF,CAHgB;AAKxBK,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,SAAS,EAAED,MAFN;AAILE,IAAAA,QAAQ,EAAEC,OAJL;AAKLC,IAAAA,WAAW,EAAED,OALR;AAMLE,IAAAA,SAAS,EAAEF,OANN;AAOLG,IAAAA,OAAO,EAAEH,OAPJ;AASLI,IAAAA,KAAK,EAAE,CAACC,MAAD,EAASR,MAAT,CATF;AAWLS,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEV,MADD;AAELW,MAAAA,SAAS,EAAE,mBAAAC,CAAC;AAAA,eAAI,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,EAA4BC,QAA5B,CAAqCD,CAArC,CAAJ;AAAA;AAFP;AAXF,GALiB;AAsBxBE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KADQ,mBACC;AACP,UAAI,KAAKN,KAAL,KAAe,KAAK,CAAxB,EAA2B;AACzB,eAAO;AAAEO,UAAAA,aAAa,EAAE,KAAKP;AAAtB,SAAP;AACD;AACF,KALO;AAORQ,IAAAA,OAPQ,qBAOG;AACT,UAAMC,IAAI,GAAG,KAAKZ,OAAL,KAAiB,IAAjB,GACT,KAAKP,KAAL,IAAc,KAAKE,SADV,GAET,KAAKA,SAFT;AAIA,aAAO,iEACQ,KAAKI,SAAL,KAAmB,IAAnB,GAA0B,OAA1B,GAAoC,QAD5C,cAEJ,KAAKC,OAAL,KAAiB,IAAjB,GACG,mBADH,GAEI,KAAKP,KAAL,KAAe,KAAK,CAApB,iBAA+B,KAAKA,KAApC,IAA8C,EAJ9C,KAMJmB,IAAI,KAAK,KAAK,CAAd,mBAA2BA,IAA3B,IAAoC,EANhC,KAOJ,KAAKhB,QAAL,KAAkB,IAAlB,GAAyB,oBAAzB,GAAgD,EAP5C,KAQJ,KAAKE,WAAL,KAAqB,IAArB,GAA4B,uBAA5B,GAAsD,EARlD,CAAP;AASD,KArBO;AAuBRe,IAAAA,KAvBQ,mBAuBC;AACP,aAAO;AACLC,QAAAA,IAAI,EAAE,OADD;AAEL,sBAAc,KAAKb;AAFd,OAAP;AAID;AA5BO,GAtBc;AAqDxBc,EAAAA,MArDwB,kBAqDhBC,CArDgB,EAqDb;AACT,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACdP,MAAAA,KAAK,EAAE,KAAKA,KADE;AAEd,eAAO,KAAKE,OAFE;AAGdE,MAAAA,KAAK,EAAE,KAAKA,KAHE;AAIdI,MAAAA,EAAE,oBAAO,KAAKC,UAAZ;AAJY,KAAR,EAKL,KAAKjB,KAAL,KAAe,KAAK,CAApB,GAAwB,CAAE,KAAKA,KAAP,CAAxB,GAAyCb,IAAI,CAAC,IAAD,EAAO,SAAP,CALxC,CAAR;AAMD;AA5DuB,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\n\nimport ListenersMixin from '../../mixins/listeners.js'\n\nimport { slot } from '../../utils/slot.js'\n\nexport default Vue.extend({\n  name: 'QBadge',\n\n  mixins: [ ListenersMixin ],\n\n  props: {\n    color: String,\n    textColor: String,\n\n    floating: Boolean,\n    transparent: Boolean,\n    multiLine: Boolean,\n    outline: Boolean,\n\n    label: [Number, String],\n\n    align: {\n      type: String,\n      validator: v => ['top', 'middle', 'bottom'].includes(v)\n    }\n  },\n\n  computed: {\n    style () {\n      if (this.align !== void 0) {\n        return { verticalAlign: this.align }\n      }\n    },\n\n    classes () {\n      const text = this.outline === true\n        ? this.color || this.textColor\n        : this.textColor\n\n      return 'q-badge flex inline items-center no-wrap' +\n        ` q-badge--${this.multiLine === true ? 'multi' : 'single'}-line` +\n        (this.outline === true\n          ? ' q-badge--outline'\n          : (this.color !== void 0 ? ` bg-${this.color}` : '')\n        ) +\n        (text !== void 0 ? ` text-${text}` : '') +\n        (this.floating === true ? ' q-badge--floating' : '') +\n        (this.transparent === true ? ' q-badge--transparent' : '')\n    },\n\n    attrs () {\n      return {\n        role: 'alert',\n        'aria-label': this.label\n      }\n    }\n  },\n\n  render (h) {\n    return h('div', {\n      style: this.style,\n      class: this.classes,\n      attrs: this.attrs,\n      on: { ...this.qListeners }\n    }, this.label !== void 0 ? [ this.label ] : slot(this, 'default'))\n  }\n})\n"]}]}