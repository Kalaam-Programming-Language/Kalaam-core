{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/mixins/mask.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/mixins/mask.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/quasar/src/mixins/mask.js"],"names":["shouldIgnoreKey","NAMED_MASKS","date","datetime","time","fulltime","phone","card","TOKENS","pattern","negate","S","N","A","transform","v","toLocaleUpperCase","a","toLocaleLowerCase","X","x","KEYS","Object","keys","forEach","key","regex","RegExp","tokenRegexMask","join","escRegex","MARKER","String","fromCharCode","props","mask","reverseFillMask","Boolean","fillMask","unmaskedValue","watch","type","__updateMaskInternals","__updateMaskValue","innerValue","val","__unmask","value","$emit","hasMask","methods","__getInitialMaskedValue","masked","__mask","__fillWithMask","__getPaddedMaskMarked","size","maskMarked","length","slice","pad","padPos","indexOf","i","includes","computedUnmask","maskReplaced","computedMask","fillChar","fillCharEscaped","replace","unmask","extract","firstMatch","unmaskChar","negateChar","_","char1","esc","token","char2","c","push","unmaskMatcher","extractLast","extractMatcher","map","re","index","unmaskMatch","exec","extractMatch","extractMatcherLength","str","m","shift","split","rawVal","updateMaskInternals","inputType","inp","$refs","input","end","selectionEnd","endReverse","unmasked","preMasked","changed","document","activeElement","$nextTick","cursor","setSelectionRange","__moveCursorRight","Math","max","min","__moveCursorRightReverse","__emitValue","__moveCursorForPaste","start","__moveCursorLeft","selection","noMarkBefore","limit","__moveCursorLeftReverse","__onMaskedKeydown","e","selectionStart","keyCode","fn","preventDefault","shiftKey","__maskReverse","valIndex","output","maskIndex","valChar","maskDef","test","firstTokenIndex"],"mappings":"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","sourcesContent":["import { shouldIgnoreKey } from '../utils/key-composition.js'\n\n// leave NAMED_MASKS at top of file (code referenced from docs)\nconst NAMED_MASKS = {\n  date: '####/##/##',\n  datetime: '####/##/## ##:##',\n  time: '##:##',\n  fulltime: '##:##:##',\n  phone: '(###) ### - ####',\n  card: '#### #### #### ####'\n}\n\nconst TOKENS = {\n  '#': { pattern: '[\\\\d]', negate: '[^\\\\d]' },\n\n  S: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]' },\n  N: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]' },\n\n  A: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  a: { pattern: '[a-zA-Z]', negate: '[^a-zA-Z]', transform: v => v.toLocaleLowerCase() },\n\n  X: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleUpperCase() },\n  x: { pattern: '[0-9a-zA-Z]', negate: '[^0-9a-zA-Z]', transform: v => v.toLocaleLowerCase() }\n}\n\nconst KEYS = Object.keys(TOKENS)\nKEYS.forEach(key => {\n  TOKENS[key].regex = new RegExp(TOKENS[key].pattern)\n})\n\nconst\n  tokenRegexMask = new RegExp('\\\\\\\\([^.*+?^${}()|([\\\\]])|([.*+?^${}()|[\\\\]])|([' + KEYS.join('') + '])|(.)', 'g'),\n  escRegex = /[.*+?^${}()|[\\]\\\\]/g\n\nconst MARKER = String.fromCharCode(1)\n\nexport default {\n  props: {\n    mask: String,\n    reverseFillMask: Boolean,\n    fillMask: [Boolean, String],\n    unmaskedValue: Boolean\n  },\n\n  watch: {\n    type () {\n      this.__updateMaskInternals()\n    },\n\n    mask (v) {\n      if (v !== void 0) {\n        this.__updateMaskValue(this.innerValue, true)\n      }\n      else {\n        const val = this.__unmask(this.innerValue)\n        this.__updateMaskInternals()\n        this.value !== val && this.$emit('input', val)\n      }\n    },\n\n    fillMask () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true)\n    },\n\n    reverseFillMask () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue, true)\n    },\n\n    unmaskedValue () {\n      this.hasMask === true && this.__updateMaskValue(this.innerValue)\n    }\n  },\n\n  methods: {\n    __getInitialMaskedValue () {\n      this.__updateMaskInternals()\n\n      if (this.hasMask === true) {\n        const masked = this.__mask(this.__unmask(this.value))\n\n        return this.fillMask !== false\n          ? this.__fillWithMask(masked)\n          : masked\n      }\n\n      return this.value\n    },\n\n    __getPaddedMaskMarked (size) {\n      if (size < this.maskMarked.length) {\n        return this.maskMarked.slice(-size)\n      }\n\n      let\n        maskMarked = this.maskMarked,\n        pad = ''\n      const\n        padPos = maskMarked.indexOf(MARKER)\n\n      if (padPos > -1) {\n        for (let i = size - maskMarked.length; i > 0; i--) {\n          pad += MARKER\n        }\n\n        maskMarked = maskMarked.slice(0, padPos) + pad + maskMarked.slice(padPos)\n      }\n\n      return maskMarked\n    },\n\n    __updateMaskInternals () {\n      this.hasMask = this.mask !== void 0 &&\n        this.mask.length > 0 &&\n        ['text', 'search', 'url', 'tel', 'password'].includes(this.type)\n\n      if (this.hasMask === false) {\n        this.computedUnmask = void 0\n        this.maskMarked = ''\n        this.maskReplaced = ''\n        return\n      }\n\n      const\n        computedMask = NAMED_MASKS[this.mask] === void 0\n          ? this.mask\n          : NAMED_MASKS[this.mask],\n        fillChar = typeof this.fillMask === 'string' && this.fillMask.length > 0\n          ? this.fillMask.slice(0, 1)\n          : '_',\n        fillCharEscaped = fillChar.replace(escRegex, '\\\\$&'),\n        unmask = [],\n        extract = [],\n        mask = []\n\n      let\n        firstMatch = this.reverseFillMask === true,\n        unmaskChar = '',\n        negateChar = ''\n\n      computedMask.replace(tokenRegexMask, (_, char1, esc, token, char2) => {\n        if (token !== void 0) {\n          const c = TOKENS[token]\n          mask.push(c)\n          negateChar = c.negate\n          if (firstMatch === true) {\n            extract.push('(?:' + negateChar + '+)?(' + c.pattern + '+)?(?:' + negateChar + '+)?(' + c.pattern + '+)?')\n            firstMatch = false\n          }\n          extract.push('(?:' + negateChar + '+)?(' + c.pattern + ')?')\n        }\n        else if (esc !== void 0) {\n          unmaskChar = '\\\\' + (esc === '\\\\' ? '' : esc)\n          mask.push(esc)\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n        }\n        else {\n          const c = char1 !== void 0 ? char1 : char2\n          unmaskChar = c === '\\\\' ? '\\\\\\\\\\\\\\\\' : c.replace(escRegex, '\\\\\\\\$&')\n          mask.push(c)\n          unmask.push('([^' + unmaskChar + ']+)?' + unmaskChar + '?')\n        }\n      })\n\n      const\n        unmaskMatcher = new RegExp(\n          '^' +\n          unmask.join('') +\n          '(' + (unmaskChar === '' ? '.' : '[^' + unmaskChar + ']') + '+)?' +\n          '$'\n        ),\n        extractLast = extract.length - 1,\n        extractMatcher = extract.map((re, index) => {\n          if (index === 0 && this.reverseFillMask === true) {\n            return new RegExp('^' + fillCharEscaped + '*' + re)\n          }\n          else if (index === extractLast) {\n            return new RegExp(\n              '^' + re +\n              '(' + (negateChar === '' ? '.' : negateChar) + '+)?' +\n              (this.reverseFillMask === true ? '$' : fillCharEscaped + '*')\n            )\n          }\n\n          return new RegExp('^' + re)\n        })\n\n      this.computedMask = mask\n      this.computedUnmask = val => {\n        const unmaskMatch = unmaskMatcher.exec(val)\n        if (unmaskMatch !== null) {\n          val = unmaskMatch.slice(1).join('')\n        }\n\n        const\n          extractMatch = [],\n          extractMatcherLength = extractMatcher.length\n\n        for (let i = 0, str = val; i < extractMatcherLength; i++) {\n          const m = extractMatcher[i].exec(str)\n\n          if (m === null) {\n            break\n          }\n\n          str = str.slice(m.shift().length)\n          extractMatch.push(...m)\n        }\n        if (extractMatch.length > 0) {\n          return extractMatch.join('')\n        }\n\n        return val\n      }\n      this.maskMarked = mask.map(v => typeof v === 'string' ? v : MARKER).join('')\n      this.maskReplaced = this.maskMarked.split(MARKER).join(fillChar)\n    },\n\n    __updateMaskValue (rawVal, updateMaskInternals, inputType) {\n      const\n        inp = this.$refs.input,\n        end = inp.selectionEnd,\n        endReverse = inp.value.length - end,\n        unmasked = this.__unmask(rawVal)\n\n      // Update here so unmask uses the original fillChar\n      updateMaskInternals === true && this.__updateMaskInternals()\n\n      const\n        preMasked = this.__mask(unmasked),\n        masked = this.fillMask !== false\n          ? this.__fillWithMask(preMasked)\n          : preMasked,\n        changed = this.innerValue !== masked\n\n      // We want to avoid \"flickering\" so we set value immediately\n      inp.value !== masked && (inp.value = masked)\n\n      changed === true && (this.innerValue = masked)\n\n      document.activeElement === inp && this.$nextTick(() => {\n        if (masked === this.maskReplaced) {\n          const cursor = this.reverseFillMask === true ? this.maskReplaced.length : 0\n          inp.setSelectionRange(cursor, cursor, 'forward')\n\n          return\n        }\n\n        if (inputType === 'insertFromPaste' && this.reverseFillMask !== true) {\n          const cursor = end - 1\n          this.__moveCursorRight(inp, cursor, cursor)\n\n          return\n        }\n\n        if (['deleteContentBackward', 'deleteContentForward'].indexOf(inputType) > -1) {\n          const cursor = this.reverseFillMask === true\n            ? Math.max(0, masked.length - (masked === this.maskReplaced ? 0 : Math.min(preMasked.length, endReverse) + 1)) + 1\n            : end\n          inp.setSelectionRange(cursor, cursor, 'forward')\n\n          return\n        }\n\n        if (this.reverseFillMask === true) {\n          if (changed === true) {\n            const cursor = Math.max(0, masked.length - (masked === this.maskReplaced ? 0 : Math.min(preMasked.length, endReverse + 1)))\n            this.__moveCursorRightReverse(inp, cursor, cursor)\n          }\n          else {\n            const cursor = masked.length - endReverse\n            inp.setSelectionRange(cursor, cursor, 'backward')\n          }\n        }\n        else {\n          if (changed === true) {\n            const cursor = Math.max(0, this.maskMarked.indexOf(MARKER), Math.min(preMasked.length, end) - 1)\n            this.__moveCursorRight(inp, cursor, cursor)\n          }\n          else {\n            const cursor = end - 1\n            this.__moveCursorRight(inp, cursor, cursor)\n          }\n        }\n      })\n\n      const val = this.unmaskedValue === true\n        ? this.__unmask(masked)\n        : masked\n\n      this.value !== val && this.__emitValue(val, true)\n    },\n\n    __moveCursorForPaste (inp, start, end) {\n      const preMasked = this.__mask(this.__unmask(inp.value))\n\n      start = Math.max(0, this.maskMarked.indexOf(MARKER), Math.min(preMasked.length, start))\n\n      inp.setSelectionRange(start, end, 'forward')\n    },\n\n    __moveCursorLeft (inp, start, end, selection) {\n      const noMarkBefore = this.maskMarked.slice(start - 1).indexOf(MARKER) === -1\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (this.maskMarked[i] === MARKER) {\n          start = i\n          noMarkBefore === true && start++\n          break\n        }\n      }\n\n      if (\n        i < 0 &&\n        this.maskMarked[start] !== void 0 &&\n        this.maskMarked[start] !== MARKER\n      ) {\n        return this.__moveCursorRight(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    __moveCursorRight (inp, start, end, selection) {\n      const limit = inp.value.length\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (this.maskMarked[i] === MARKER) {\n          end = i\n          break\n        }\n        else if (this.maskMarked[i - 1] === MARKER) {\n          end = i\n        }\n      }\n\n      if (\n        i > limit &&\n        this.maskMarked[end - 1] !== void 0 &&\n        this.maskMarked[end - 1] !== MARKER\n      ) {\n        return this.__moveCursorLeft(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection ? start : end, end, 'forward')\n    },\n\n    __moveCursorLeftReverse (inp, start, end, selection) {\n      const\n        maskMarked = this.__getPaddedMaskMarked(inp.value.length)\n      let i = Math.max(0, start - 1)\n\n      for (; i >= 0; i--) {\n        if (maskMarked[i - 1] === MARKER) {\n          start = i\n          break\n        }\n        else if (maskMarked[i] === MARKER) {\n          start = i\n          if (i === 0) {\n            break\n          }\n        }\n      }\n\n      if (\n        i < 0 &&\n        maskMarked[start] !== void 0 &&\n        maskMarked[start] !== MARKER\n      ) {\n        return this.__moveCursorRightReverse(inp, 0, 0)\n      }\n\n      start >= 0 && inp.setSelectionRange(\n        start,\n        selection === true ? end : start, 'backward'\n      )\n    },\n\n    __moveCursorRightReverse (inp, start, end, selection) {\n      const\n        limit = inp.value.length,\n        maskMarked = this.__getPaddedMaskMarked(limit),\n        noMarkBefore = maskMarked.slice(0, end + 1).indexOf(MARKER) === -1\n      let i = Math.min(limit, end + 1)\n\n      for (; i <= limit; i++) {\n        if (maskMarked[i - 1] === MARKER) {\n          end = i\n          end > 0 && noMarkBefore === true && end--\n          break\n        }\n      }\n\n      if (\n        i > limit &&\n        maskMarked[end - 1] !== void 0 &&\n        maskMarked[end - 1] !== MARKER\n      ) {\n        return this.__moveCursorLeftReverse(inp, limit, limit)\n      }\n\n      inp.setSelectionRange(selection === true ? start : end, end, 'forward')\n    },\n\n    __onMaskedKeydown (e) {\n      if (shouldIgnoreKey(e) === true) {\n        return\n      }\n\n      const\n        inp = this.$refs.input,\n        start = inp.selectionStart,\n        end = inp.selectionEnd\n\n      if (e.keyCode === 37 || e.keyCode === 39) { // Left / Right\n        const fn = this['__moveCursor' + (e.keyCode === 39 ? 'Right' : 'Left') + (this.reverseFillMask === true ? 'Reverse' : '')]\n\n        e.preventDefault()\n        fn(inp, start, end, e.shiftKey)\n      }\n      else if (\n        e.keyCode === 8 && // Backspace\n        this.reverseFillMask !== true &&\n        start === end\n      ) {\n        this.__moveCursorLeft(inp, start, end, true)\n      }\n      else if (\n        e.keyCode === 46 && // Delete\n        this.reverseFillMask === true &&\n        start === end\n      ) {\n        this.__moveCursorRightReverse(inp, start, end, true)\n      }\n\n      this.$emit('keydown', e)\n    },\n\n    __mask (val) {\n      if (val === void 0 || val === null || val === '') { return '' }\n\n      if (this.reverseFillMask === true) {\n        return this.__maskReverse(val)\n      }\n\n      const mask = this.computedMask\n\n      let valIndex = 0, output = ''\n\n      for (let maskIndex = 0; maskIndex < mask.length; maskIndex++) {\n        const\n          valChar = val[valIndex],\n          maskDef = mask[maskIndex]\n\n        if (typeof maskDef === 'string') {\n          output += maskDef\n          valChar === maskDef && valIndex++\n        }\n        else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          output += maskDef.transform !== void 0\n            ? maskDef.transform(valChar)\n            : valChar\n          valIndex++\n        }\n        else {\n          return output\n        }\n      }\n\n      return output\n    },\n\n    __maskReverse (val) {\n      const\n        mask = this.computedMask,\n        firstTokenIndex = this.maskMarked.indexOf(MARKER)\n\n      let valIndex = val.length - 1, output = ''\n\n      for (let maskIndex = mask.length - 1; maskIndex >= 0; maskIndex--) {\n        const maskDef = mask[maskIndex]\n\n        let valChar = val[valIndex]\n\n        if (typeof maskDef === 'string') {\n          output = maskDef + output\n          valChar === maskDef && valIndex--\n        }\n        else if (valChar !== void 0 && maskDef.regex.test(valChar)) {\n          do {\n            output = (maskDef.transform !== void 0 ? maskDef.transform(valChar) : valChar) + output\n            valIndex--\n            valChar = val[valIndex]\n          // eslint-disable-next-line no-unmodified-loop-condition\n          } while (firstTokenIndex === maskIndex && valChar !== void 0 && maskDef.regex.test(valChar))\n        }\n        else {\n          return output\n        }\n      }\n\n      return output\n    },\n\n    __unmask (val) {\n      return typeof val !== 'string' || this.computedUnmask === void 0\n        ? (typeof val === 'number' ? this.computedUnmask('' + val) : val)\n        : this.computedUnmask(val)\n    },\n\n    __fillWithMask (val) {\n      if (this.maskReplaced.length - val.length <= 0) {\n        return val\n      }\n\n      return this.reverseFillMask === true && val.length > 0\n        ? this.maskReplaced.slice(0, -val.length) + val\n        : val + this.maskReplaced.slice(val.length)\n    }\n  }\n}\n"]}]}