{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/TypeCheck/AdvancedTypeChecking.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/TypeCheck/AdvancedTypeChecking.js","mtime":1652750775809},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwpleHBvcnQgZnVuY3Rpb24gaXNQdXJlRXZhbCgpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIGlmICgvXihbLStdP1swLTldKlwuP1swLTldK1tcL1wrXC1cKl0pKyhbLStdP1swLTldKlwuP1swLTldKykqJC9nbS50ZXN0KGVsZW1lbnQpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0gLy9pZiBwYXJzZXIgZW5jb3VudGVycyBhbnl0aGluZyBsaWtlICgiIG9yICgsIHRoZW4gdGhhdCdzIGEgcmVhbHRpbWUgcHJpbnQuCi8vYnVpbGRzdHJpbmcgd2lsbCBiZSBhcHBsaWVkIG5vdyB0byBjcmVhdGUgYSBzdHJpbmcgYW5kIHB1c2ggaXQgaW50byB0b2tlbnMKCmV4cG9ydCBmdW5jdGlvbiBpc1JlYWxUaW1lUHJpbnRNdWx0aXBsZVN0cmluZygpIHsKICByZXR1cm4gZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgIHZhciBjb25kaXRpb25TdGFydCA9IGVsZW1lbnQuY2hhckF0KDApOwogICAgdmFyIGxhc3RDaGFyID0gZWxlbWVudC5jaGFyQXQoZWxlbWVudC5sZW5ndGggLSAxKTsgLy9USEUgUHJpbmNpcGxlIGNvbmRpdGlvbiB0byBwcm9jZWVkIGJ1aWxkaW5nIGEgc3RyaW5nIGFmdGVyIGlkZW50aWZ5dGluZyBpdCBhcyBhIHBvdGVudGlhbCByZWFsdGltZXN0cmluZwoKICAgIGlmIChjb25kaXRpb25TdGFydCA9PSAnKCcgJiYgbGFzdENoYXIgIT0gJyknIHx8IGVsZW1lbnQuaW5jbHVkZXMoJygiJykgfHwgZWxlbWVudC5pbmNsdWRlcygiKCciKSkgewogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBpc1N0cmluZ2FuZFZhbHVlKCkgewogIHJldHVybiBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgdmFyIHggPSBlbGVtZW50OwoKICAgIGlmICh4LmluY2x1ZGVzKCciJykgJiYgeC5pbmNsdWRlcygnKycpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGlzQ2FsY3VsYXRpb24oKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICBpZiAoKGVsZW1lbnQuaW5jbHVkZXMoJysnKSB8fCBlbGVtZW50LmluY2x1ZGVzKCclJykgfHwgZWxlbWVudC5pbmNsdWRlcygnLScpIHx8IGVsZW1lbnQuaW5jbHVkZXMoJyonKSB8fCBlbGVtZW50LmluY2x1ZGVzKCcvJykpICYmICFlbGVtZW50LmluY2x1ZGVzKCdbJykgJiYgKGVsZW1lbnQuaW5jbHVkZXMoJygnKSAmJiBlbGVtZW50LmluY2x1ZGVzKCcpJykgfHwgIWVsZW1lbnQuaW5jbHVkZXMoJygnKSAmJiAhZWxlbWVudC5pbmNsdWRlcygnKScpKSAmJiBlbGVtZW50LmNoYXJBdChlbGVtZW50Lmxlbmd0aCAtIDEpICE9ICcrJyAmJiAoZWxlbWVudC5jaGFyQXQoMCkgIT0gJy8nIHx8IGVsZW1lbnQuY2hhckF0KDApICE9ICcqJykpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gaXNEaXJlY3RQcmludEFyaXRobWV0aWMoKSB7CiAgcmV0dXJuIGZ1bmN0aW9uICh0b2tlbikgewogICAgaWYgKHRva2VuLmluY2x1ZGVzKCcrJykgfHwgdG9rZW4uaW5jbHVkZXMoJy0nKSB8fCB0b2tlbi5pbmNsdWRlcygnKicpIHx8IHRva2VuLmluY2x1ZGVzKCcvJykpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfTsKfQ=="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/TypeCheck/AdvancedTypeChecking.js"],"names":["isPureEval","element","test","isRealTimePrintMultipleString","conditionStart","charAt","lastChar","length","includes","isStringandValue","x","isCalculation","isDirectPrintArithmetic","token"],"mappings":";;AAAA,OAAO,SAASA,UAAT,GAAsB;AAC3B,SAAO,UAAUC,OAAV,EAAmB;AACxB,QAAI,+DAA+DC,IAA/D,CAAoED,OAApE,CAAJ,EAAkF;AAChF,aAAO,IAAP;AACD;AACF,GAJD;AAKD,C,CAED;AACA;;AAEA,OAAO,SAASE,6BAAT,GAAyC;AAC9C,SAAO,UAAUF,OAAV,EAAmB;AACxB,QAAIG,cAAc,GAAGH,OAAO,CAACI,MAAR,CAAe,CAAf,CAArB;AACA,QAAIC,QAAQ,GAAGL,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAiB,CAAhC,CAAf,CAFwB,CAIxB;;AAEA,QAAKH,cAAc,IAAI,GAAlB,IAAyBE,QAAQ,IAAI,GAAtC,IAA8CL,OAAO,CAACO,QAAR,CAAiB,IAAjB,CAA9C,IAAwEP,OAAO,CAACO,QAAR,CAAiB,IAAjB,CAA5E,EAAoG;AAClG,aAAO,IAAP;AACD;AACF,GATD;AAUD;AAED,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAO,UAAUR,OAAV,EAAmB;AACxB,QAAIS,CAAC,GAAGT,OAAR;;AAEA,QAAIS,CAAC,CAACF,QAAF,CAAW,GAAX,KAAmBE,CAAC,CAACF,QAAF,CAAW,GAAX,CAAvB,EAAwC;AACtC,aAAO,IAAP;AACD;AACF,GAND;AAOD;AAED,OAAO,SAASG,aAAT,GAAyB;AAC9B,SAAO,UAAUV,OAAV,EAAmB;AACxB,QAAI,CAACA,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAAyBP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAzB,IAAkDP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAlD,IAA2EP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA3E,IAAoGP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAArG,KAA+H,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAhI,KAA2JP,OAAO,CAACO,QAAR,CAAiB,GAAjB,KAAyBP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA1B,IAAqD,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAAD,IAA0B,CAACP,OAAO,CAACO,QAAR,CAAiB,GAAjB,CAA1O,KAAqQP,OAAO,CAACI,MAAR,CAAeJ,OAAO,CAACM,MAAR,GAAiB,CAAhC,KAAsC,GAA3S,KAAmTN,OAAO,CAACI,MAAR,CAAe,CAAf,KAAqB,GAArB,IAA4BJ,OAAO,CAACI,MAAR,CAAe,CAAf,KAAqB,GAApW,CAAJ,EAA8W;AAC5W,aAAO,IAAP;AACD;AACF,GAJD;AAKD;AAED,OAAO,SAASO,uBAAT,GAAmC;AACxC,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIA,KAAK,CAACL,QAAN,CAAe,GAAf,KAAuBK,KAAK,CAACL,QAAN,CAAe,GAAf,CAAvB,IAA8CK,KAAK,CAACL,QAAN,CAAe,GAAf,CAA9C,IAAqEK,KAAK,CAACL,QAAN,CAAe,GAAf,CAAzE,EAA8F;AAC5F,aAAO,IAAP;AACD;AACF,GAJD;AAKD","sourcesContent":["export function isPureEval() {\n  return function (element) {\n    if (/^([-+]?[0-9]*\\.?[0-9]+[\\/\\+\\-\\*])+([-+]?[0-9]*\\.?[0-9]+)*$/gm.test(element)) {\n      return true;\n    }\n  };\n}\n\n//if parser encounters anything like (\" or (, then that's a realtime print.\n//buildstring will be applied now to create a string and push it into tokens\n\nexport function isRealTimePrintMultipleString() {\n  return function (element) {\n    let conditionStart = element.charAt(0);\n    let lastChar = element.charAt(element.length - 1);\n\n    //THE Principle condition to proceed building a string after identifyting it as a potential realtimestring\n\n    if ((conditionStart == '(' && lastChar != ')') || element.includes('(\"') || element.includes(\"('\")) {\n      return true;\n    }\n  };\n}\n\nexport function isStringandValue() {\n  return function (element) {\n    let x = element;\n\n    if (x.includes('\"') && x.includes('+')) {\n      return true;\n    }\n  };\n}\n\nexport function isCalculation() {\n  return function (element) {\n    if ((element.includes('+') || element.includes('%') || element.includes('-') || element.includes('*') || element.includes('/')) && !element.includes('[') && ((element.includes('(') && element.includes(')')) || (!element.includes('(') && !element.includes(')'))) && element.charAt(element.length - 1) != '+' && (element.charAt(0) != '/' || element.charAt(0) != '*')) {\n      return true;\n    }\n  };\n}\n\nexport function isDirectPrintArithmetic() {\n  return function (token) {\n    if (token.includes('+') || token.includes('-') || token.includes('*') || token.includes('/')) {\n      return true;\n    }\n  };\n}\n"]}]}