{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/components/table/table-body.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/components/table/table-body.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/components/table/table-body.js"],"names":["QCheckbox","methods","getTableRowBody","row","body","pageIndex","key","getRowKey","selected","isRowSelected","addBodyRowMeta","cols","computedCols","colsMap","computedColsMap","__trClass","getTableRow","h","bodyCell","$scopedSlots","child","map","col","bodyCellCol","name","slot","addBodyCellMetaData","__tdClass","style","getCellValue","hasSelectionMode","unshift","staticClass","props","value","color","dark","isDark","dense","on","input","adding","evt","__updateSelection","data","qListeners","click","$emit","dblclick","getTableBody","topRow","bottomRow","mapFn","computedRows","concat","getTableRowVirtual","item","rowIndex","firstRowIndex","Object","defineProperty","get","set","configurable","enumerable","isRowExpanded","__updateExpanded","c","val","field","format"],"mappings":"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","sourcesContent":["import QCheckbox from '../checkbox/QCheckbox.js'\n\nexport default {\n  methods: {\n    getTableRowBody (row, body, pageIndex) {\n      const\n        key = this.getRowKey(row),\n        selected = this.isRowSelected(key)\n\n      return body(this.addBodyRowMeta({\n        key,\n        row,\n        pageIndex,\n        cols: this.computedCols,\n        colsMap: this.computedColsMap,\n        __trClass: selected ? 'selected' : ''\n      }))\n    },\n\n    getTableRow (h, row, pageIndex) {\n      const\n        bodyCell = this.$scopedSlots['body-cell'],\n        key = this.getRowKey(row),\n        selected = this.isRowSelected(key),\n        child = this.computedCols.map(col => {\n          const\n            bodyCellCol = this.$scopedSlots[`body-cell-${col.name}`],\n            slot = bodyCellCol !== void 0 ? bodyCellCol : bodyCell\n\n          return slot !== void 0\n            ? slot(this.addBodyCellMetaData({ row, pageIndex, col }))\n            : h('td', {\n              class: col.__tdClass,\n              style: col.style\n            }, this.getCellValue(col, row))\n        })\n\n      this.hasSelectionMode === true && child.unshift(\n        h('td', { staticClass: 'q-table--col-auto-width' }, [\n          h(QCheckbox, {\n            props: {\n              value: selected,\n              color: this.color,\n              dark: this.isDark,\n              dense: this.dense\n            },\n            on: {\n              input: (adding, evt) => {\n                this.__updateSelection([ key ], [ row ], adding, evt)\n              }\n            }\n          })\n        ])\n      )\n\n      const data = { key, class: { selected }, on: {} }\n\n      if (this.qListeners['row-click'] !== void 0) {\n        data.class['cursor-pointer'] = true\n        data.on.click = evt => {\n          this.$emit('row-click', evt, row)\n        }\n      }\n\n      if (this.qListeners['row-dblclick'] !== void 0) {\n        data.class['cursor-pointer'] = true\n        data.on.dblclick = evt => {\n          this.$emit('row-dblclick', evt, row)\n        }\n      }\n\n      return h('tr', data, child)\n    },\n\n    getTableBody (h) {\n      const\n        body = this.$scopedSlots.body,\n        topRow = this.$scopedSlots['top-row'],\n        bottomRow = this.$scopedSlots['bottom-row'],\n        mapFn = body !== void 0\n          ? (row, pageIndex) => this.getTableRowBody(row, body, pageIndex)\n          : (row, pageIndex) => this.getTableRow(h, row, pageIndex)\n\n      let child = this.computedRows.map(mapFn)\n\n      if (topRow !== void 0) {\n        child = topRow({ cols: this.computedCols }).concat(child)\n      }\n      if (bottomRow !== void 0) {\n        child = child.concat(bottomRow({ cols: this.computedCols }))\n      }\n\n      return h('tbody', child)\n    },\n\n    getTableRowVirtual (h) {\n      const body = this.$scopedSlots.body\n\n      return body !== void 0\n        ? (props, pageIndex) => this.getTableRowBody(props.item, body, pageIndex)\n        : (props, pageIndex) => this.getTableRow(h, props.item, pageIndex)\n    },\n\n    addBodyRowMeta (data) {\n      data.rowIndex = this.firstRowIndex + data.pageIndex\n\n      this.hasSelectionMode === true && Object.defineProperty(data, 'selected', {\n        get: () => this.isRowSelected(data.key),\n        set: adding => {\n          this.__updateSelection([ data.key ], [ data.row ], adding)\n        },\n        configurable: true,\n        enumerable: true\n      })\n\n      Object.defineProperty(data, 'expand', {\n        get: () => this.isRowExpanded(data.key),\n        set: adding => {\n          this.__updateExpanded(data.key, adding)\n        },\n        configurable: true,\n        enumerable: true\n      })\n\n      data.cols = data.cols.map(col => {\n        const c = { ...col }\n        Object.defineProperty(c, 'value', {\n          get: () => this.getCellValue(col, data.row),\n          configurable: true,\n          enumerable: true\n        })\n        return c\n      })\n\n      return data\n    },\n\n    addBodyCellMetaData (data) {\n      data.rowIndex = this.firstRowIndex + data.pageIndex\n\n      Object.defineProperty(data, 'value', {\n        get: () => this.getCellValue(data.col, data.row),\n        configurable: true,\n        enumerable: true\n      })\n      return data\n    },\n\n    getCellValue (col, row) {\n      const val = typeof col.field === 'function' ? col.field(row) : row[col.field]\n      return col.format !== void 0 ? col.format(val, row) : val\n    }\n  }\n}\n"]}]}