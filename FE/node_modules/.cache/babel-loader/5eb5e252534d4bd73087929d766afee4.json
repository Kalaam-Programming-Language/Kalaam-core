{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-core/PushTokens/main.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/PushTokens/main.js","mtime":1620343647679},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-core/PushTokens/main.js"],"names":["RemoveBrackets","operatorType","ActiveLangugaeKeywords","PushVariable","v","tokens","push","PushString","value","type","PushVariableValue","PushNumber","PushOperator","subtype","PushKeyword","replace","Print","PushConditionalKeyword","PushEmptyArrayInit","data","i","PushForLoop","PushInput","cleaned_sourcedata","lastchar","charAt","length","AcceptAs","PushWhileLoop","PushWhileLoopCondition","PushForLoopAruguments","element","iterator","includes","Range","split","iterationStart","iterationEnd","PushArgs","PushCondition","PushToArray","PushExpression","PushNativeOperation","PushFunctionData","sourcedata","functionName","functionNameSplit","functionArguments","arguments","FunctionInvocation","FunctionStack","PushFunctionExecution","passedValues","PushArray","Split","IndexInput","PushCalculation","multiCal","test","PushRealTimePrintOperation","mode","PushStringandValueOperation"],"mappings":"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","sourcesContent":["import { RemoveBrackets, operatorType, } from '../Scripts/Helpers';\nimport { ActiveLangugaeKeywords, } from '../Compiler/constants';\n//ANCHOR - Functions to push token with type and value into tokens array for further parsing\n\nfunction PushVariable(v, tokens) {\n    tokens.push(v);\n}\n\nfunction PushString(value, tokens) {\n    tokens.push({\n        type: 'string',\n        value: value,\n    });\n}\n\nfunction PushVariableValue(value, tokens) {\n    tokens.push({\n        type: 'value',\n        value: value,\n    });\n}\n\nfunction PushNumber(value, tokens) {\n    tokens.push({\n        type: 'value',\n        value: value,\n    });\n}\n\nfunction PushOperator(value, tokens) {\n    let subtype = operatorType(value);\n\n    tokens.push({\n        type: 'operator',\n        value,\n        subtype,\n    });\n}\n\nfunction PushKeyword(value, tokens) {\n    value = value.replace('+', ' + ');\n    let subtype = value === ActiveLangugaeKeywords.Print ? 'print' : 'default';\n\n    tokens.push({\n        type: 'keyword',\n        value: value,\n        subtype,\n    });\n}\nfunction PushConditionalKeyword(value, tokens) {\n    tokens.push({\n        type: 'conditionalkeyword',\n        value: value,\n    });\n}\n\nfunction PushEmptyArrayInit(tokens, data, i) {\n    tokens.push({\n        type: 'EmptyArrayInit',\n        value: data[i - 1],\n    //skipping =\n    });\n}\n\nfunction PushForLoop(value, tokens) {\n    tokens.push({\n        type: 'ForLoopStart',\n        value: value,\n    });\n}\n\nfunction PushInput(value, tokens, cleaned_sourcedata, i) {\n    let lastchar = value.charAt(value.length - 1);\n\n    value = lastchar == ',' ? (value = value + cleaned_sourcedata[i + 1]) : value;\n\n    value = RemoveBrackets(value);\n\n    value = value.replace('इनपुट', '');\n\n    tokens.push({\n        type: 'AcceptInput',\n        value: ' ',\n        AcceptAs: value,\n    });\n}\n\nfunction PushWhileLoop(value, tokens) {\n    tokens.push({\n        type: 'WhileLoopStart',\n        value: value,\n    });\n}\n\nfunction PushWhileLoopCondition(value, tokens) {\n    tokens.push({\n        type: 'WhileLoopCondition',\n        value: value,\n    });\n}\n\nfunction PushForLoopAruguments(element, cleaned_sourcedata, i, tokens) {\n    //This values will be fixed even though for loop definations change\n    let iterator = cleaned_sourcedata[i + 1];\n    let value = cleaned_sourcedata[i + 3];\n\n    if (value.includes('(') && value.includes(',')) {\n        let Range = RemoveBrackets(value).split(',');\n        let iterationStart = Range[0];\n        let iterationEnd = Range[1];\n\n        // let k = i + 5;\n\n        PushArgs(iterator, value, iterationStart, iterationEnd);\n\n    //run a function to collect arguments\n    } else {\n        let Range = RemoveBrackets(cleaned_sourcedata[i + 5]).split(',');\n\n        let iterationStart = Range[0];\n        let iterationEnd = Range[1];\n\n        //let k = i + 6;\n\n        PushArgs(iterator, value, iterationStart, iterationEnd);\n    }\n\n    //to get (2,9) into start=2 and end=9\n\n    //run a function to store sourcedata\n\n    function PushArgs(iterator, value, iterationStart, iterationEnd) {\n        tokens.push({\n            type: 'ForLoopArguments',\n            iterator: iterator,\n            value: value,\n            iterationStart: iterationStart,\n            iterationEnd: iterationEnd,\n        });\n    }\n}\n\nfunction PushCondition(value, tokens) {\n    tokens.push({\n        type: 'condition',\n        value: value,\n    });\n}\n\nfunction PushToArray(value, tokens) {\n    tokens.push({\n        type: 'PushToArray',\n        value: value,\n    });\n}\n\nfunction PushExpression(value, tokens) {\n    tokens.push({\n        type: 'expression',\n        value: value,\n    });\n}\n\nfunction PushNativeOperation(value, tokens) {\n    tokens.push({\n        type: 'NativeOperation',\n        value: value,\n    });\n}\n\n\n\n\nfunction PushFunctionData(value, tokens, sourcedata, i) {\n    let functionName = sourcedata[i + 1];\n    let functionNameSplit = functionName.split('(');\n    let functionArguments = RemoveBrackets(functionNameSplit[1]);\n    //\n    functionArguments = functionArguments.split(',');\n\n    tokens.push({\n        type: 'function',\n        value: functionNameSplit[0],\n        arguments: functionArguments,\n        FunctionInvocation: false,\n        FunctionStack: [],\n    });\n}\n\nfunction PushFunctionExecution(value, tokens, sourcedata, i, passedValues) {\n    let functionName = value;\n    let functionNameSplit = functionName.split('(');\n    let functionArguments = RemoveBrackets(functionNameSplit[1]);\n    //\n    functionArguments = functionArguments.split(',');\n\n    tokens.push({\n        type: 'functionExecution',\n        value: functionNameSplit[0],\n        arguments: functionArguments,\n        FunctionInvocation: true,\n        passedValues: passedValues,\n    });\n}\n\nfunction PushArray(value, tokens) {\n    if (value.includes('(') && value.includes(')')) {\n        value = RemoveBrackets(value);\n\n        value = value.replace(']', '');\n\n        let Split = value.split('[');\n\n        let IndexInput = Split[1];\n\n        value = value + ']';\n\n        tokens.push({\n            type: 'Array',\n            value: value,\n            IndexInput: IndexInput,\n        });\n    } else {\n        tokens.push({\n            type: 'Array',\n            value: value,\n        });\n    }\n}\n\nfunction PushCalculation(value, tokens, cleaned_sourcedata, i, multiCal) {\n    //not allowing values like Numbers[a]\n    //revisit this\n\n    if (!(!/\\d+/.test(cleaned_sourcedata[i - 2]) && cleaned_sourcedata[i - 2].includes('['))) {\n    //\n\n        tokens.push({\n            type: 'Calculation',\n            value: value,\n            multiCal,\n        });\n    }\n}\n\nfunction PushRealTimePrintOperation(value, tokens) {\n    tokens.push({\n        type: 'value',\n        value: value,\n        mode: 'RealTimePrint',\n    });\n}\n\nfunction PushStringandValueOperation(value, tokens) {\n    tokens.push({\n        type: 'value',\n        value: value,\n        mode: 'StringandValue',\n    });\n}\n\nexport {\n    PushVariableValue,\n    PushNativeOperation,\n    PushToArray,\n    PushFunctionExecution,\n    PushFunctionData,\n    PushInput,\n    PushArray,\n    PushEmptyArrayInit,\n    PushCalculation,\n    PushConditionalKeyword,\n    PushCondition,\n    PushWhileLoop,\n    PushWhileLoopCondition,\n    PushForLoop,\n    PushForLoopAruguments,\n    PushExpression,\n    PushKeyword,\n    PushNumber,\n    PushOperator,\n    PushRealTimePrintOperation,\n    PushString,\n    PushStringandValueOperation,\n    PushVariable,\n};\n"]}]}