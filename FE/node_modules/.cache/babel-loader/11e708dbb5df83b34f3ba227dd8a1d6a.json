{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/src/components/Kalaam.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/src/components/Kalaam.js","mtime":1617330646335},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-BE/FE/src/components/Kalaam.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","type","style","A","B","C","D","operator","atom","isOperatorChar","isJsonldKeyword","readRegexp","stream","escaped","next","inSet","content","ret","tp","cont","tokenBase","state","ch","tokenize","tokenString","match","test","eat","tokenComment","skipToEnd","expressionAllowed","current","tokenQuasi","peek","eatWhile","lexical","word","lastType","propertyIsEnumerable","quote","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","string","indexOf","start","m","exec","slice","index","depth","sawSomething","pos","charAt","bracket","atomicTypes","JSLexical","indented","column","align","prev","info","inScope","varname","v","localVars","name","cx","context","vars","parseJS","cc","marked","hasOwnProperty","combinator","length","pop","expression","statement","lex","pass","i","arguments","push","apply","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","inner","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","result","indent","outer","poplex","expect","wanted","exp","value","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","property","backUp","continueQuasi","targetNoComma","target","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","textAfter","startState","basecolumn","token","sol","indentation","eatSpace","Pass","firstChar","top","c","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","closeBrackets","helperType","skipExpression","registerHelper","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n        mod(require(\"../../node_modules/codemirror/lib/codemirror\"));\n    else if (typeof define == \"function\" && define.amd) // AMD\n        define([\"../../node_modules/codemirror/lib/codemirror\", ], mod);\n    else // Plain browser env\n        mod(CodeMirror);\n})(function(CodeMirror) {\n    \"use strict\";\n\n    CodeMirror.defineMode(\"kalaam\", function(config, parserConfig) {\n        var indentUnit = config.indentUnit;\n        var statementIndent = parserConfig.statementIndent;\n        var jsonldMode = parserConfig.jsonld;\n        var jsonMode = parserConfig.json || jsonldMode;\n        var isTS = parserConfig.typescript;\n        var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n        // Tokenizer\n\n        var keywords = function() {\n            function kw(type) { return { type: type, style: \"keyword\", }; }\n            var A = kw(\"keyword a\"),\n                B = kw(\"keyword b\"),\n                C = kw(\"keyword c\"),\n                D = kw(\"keyword d\");\n            var operator = kw(\"operator\"),\n                atom = { type: \"atom\", style: \"atom\", };\n\n            return {\n                \"if\": kw(\"if\"),\n                \"while\": A,\n                \"with\": A,\n                \"else\": B,\n                \"do\": B,\n                \"try\": B,\n                \"finally\": B,\n                \"return\": D,\n                \"break\": D,\n                \"continue\": D,\n                \"new\": kw(\"new\"),\n                \"delete\": C,\n                \"void\": C,\n                \"throw\": C,\n                \"debugger\": kw(\"debugger\"),\n                \"var\": kw(\"var\"),\n                \"const\": kw(\"var\"),\n                \"let\": kw(\"var\"),\n                \"दिखाए\": kw(\"दिखाए\"),\n                \"दाखवा\": kw(\"दाखवा\"),\n                \"रचना\": kw(\"रचना\"),\n                \"इनपुट\": kw(\"इनपुट\"),\n                \"अगर\": kw(\"अगर\"),\n                \"जर\": kw(\"जर\"),\n                \"दुहराओ\": kw(\"दुहराओ\"),\n                \"को\": kw(\"को\"),\n                \"जबतक\": kw(\"जबतक\"),\n                \"जोपर्यंत\": kw(\"जोपर्यंत\"),\n                \"संख्या\": kw(\"संख्या\"),\n                \"पुश\": kw(\"पुश\"),\n                \"अन्यथा\": kw(\"अन्यथा\"),\n                \"मे\": kw(\"मे\"),\n                \"in\": operator,\n                \"typeof\": operator,\n                \"instanceof\": operator,\n                \"true\": atom,\n                \"false\": atom,\n                \"null\": atom,\n                \"undefined\": atom,\n                \"NaN\": atom,\n                \"Infinity\": atom,\n                \"this\": kw(\"this\"),\n                \"class\": kw(\"class\"),\n                \"super\": kw(\"atom\"),\n                \"yield\": C,\n                \"export\": kw(\"export\"),\n                \"import\": kw(\"import\"),\n                \"extends\": C,\n                \"await\": C,\n            };\n        }();\n\n        var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n        var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n        function readRegexp(stream) {\n            var escaped = false,\n                next, inSet = false;\n            while ((next = stream.next()) != null) {\n                if (!escaped) {\n                    if (next == \"/\" && !inSet) return;\n                    if (next == \"[\") inSet = true;\n                    else if (inSet && next == \"]\") inSet = false;\n                }\n                escaped = !escaped && next == \"\\\\\";\n            }\n        }\n\n        // Used as scratch variables to communicate multiple values without\n        // consing up tons of objects.\n        var type, content;\n\n        function ret(tp, style, cont) {\n            type = tp;\n            content = cont;\n            return style;\n        }\n\n        function tokenBase(stream, state) {\n            var ch = stream.next();\n            if (ch == \"\\\"\" || ch == \"'\") {\n                state.tokenize = tokenString(ch);\n                return state.tokenize(stream, state);\n            } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n                return ret(\"number\", \"number\");\n            } else if (ch == \".\" && stream.match(\"..\")) {\n                return ret(\"spread\", \"meta\");\n            } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n                return ret(ch);\n            } else if (ch == \"=\" && stream.eat(\">\")) {\n                return ret(\"=>\", \"operator\");\n            } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n                return ret(\"number\", \"number\");\n            } else if (/\\d/.test(ch)) {\n                stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n                return ret(\"number\", \"number\");\n            } else if (ch == \"/\") {\n                if (stream.eat(\"*\")) {\n                    state.tokenize = tokenComment;\n                    return tokenComment(stream, state);\n                } else if (stream.eat(\"/\")) {\n                    stream.skipToEnd();\n                    return ret(\"comment\", \"comment\");\n                } else if (expressionAllowed(stream, state, 1)) {\n                    readRegexp(stream);\n                    stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n                    return ret(\"regexp\", \"string-2\");\n                } else {\n                    stream.eat(\"=\");\n                    return ret(\"operator\", \"operator\", stream.current());\n                }\n            } else if (ch == \"`\") {\n                state.tokenize = tokenQuasi;\n                return tokenQuasi(stream, state);\n            } else if (ch == \"#\" && stream.peek() == \"!\") {\n                stream.skipToEnd();\n                return ret(\"meta\", \"meta\");\n            } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n                return ret(\"variable\", \"property\");\n            } else if (ch == \"<\" && stream.match(\"!--\") || ch == \"-\" && stream.match(\"->\")) {\n                stream.skipToEnd();\n                return ret(\"comment\", \"comment\");\n            } else if (isOperatorChar.test(ch)) {\n                if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n                    if (stream.eat(\"=\")) {\n                        if (ch == \"!\" || ch == \"=\") stream.eat(\"=\");\n                    } else if (/[<>*+\\-]/.test(ch)) {\n                        stream.eat(ch);\n                        if (ch == \">\") stream.eat(ch);\n                    }\n                }\n                if (ch == \"?\" && stream.eat(\".\")) return ret(\".\");\n                return ret(\"operator\", \"operator\", stream.current());\n            } else if (wordRE.test(ch)) {\n                stream.eatWhile(wordRE);\n                var word = stream.current();\n                if (state.lastType != \".\") {\n                    if (keywords.propertyIsEnumerable(word)) {\n                        var kw = keywords[word];\n                        return ret(kw.type, kw.style, word);\n                    }\n                    if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\n                        return ret(\"async\", \"keyword\", word);\n                }\n                return ret(\"variable\", \"variable\", word);\n            }\n        }\n\n        function tokenString(quote) {\n            return function(stream, state) {\n                var escaped = false,\n                    next;\n                if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)) {\n                    state.tokenize = tokenBase;\n                    return ret(\"jsonld-keyword\", \"meta\");\n                }\n                while ((next = stream.next()) != null) {\n                    if (next == quote && !escaped) break;\n                    escaped = !escaped && next == \"\\\\\";\n                }\n                if (!escaped) state.tokenize = tokenBase;\n                return ret(\"string\", \"string\");\n            };\n        }\n\n        function tokenComment(stream, state) {\n            var maybeEnd = false,\n                ch;\n            while (ch = stream.next()) {\n                if (ch == \"/\" && maybeEnd) {\n                    state.tokenize = tokenBase;\n                    break;\n                }\n                maybeEnd = (ch == \"*\");\n            }\n            return ret(\"comment\", \"comment\");\n        }\n\n        function tokenQuasi(stream, state) {\n            var escaped = false,\n                next;\n            while ((next = stream.next()) != null) {\n                if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n                    state.tokenize = tokenBase;\n                    break;\n                }\n                escaped = !escaped && next == \"\\\\\";\n            }\n            return ret(\"quasi\", \"string-2\", stream.current());\n        }\n\n        var brackets = \"([{}])\";\n        // This is a crude lookahead trick to try and notice that we're\n        // parsing the argument patterns for a fat-arrow function before we\n        // actually hit the arrow token. It only works if the arrow is on\n        // the same line as the arguments and there's no strange noise\n        // (comments) in between. Fallback is to only notice when we hit the\n        // arrow, and not declare the arguments as locals for the arrow\n        // body.\n        function findFatArrow(stream, state) {\n            if (state.fatArrowAt) state.fatArrowAt = null;\n            var arrow = stream.string.indexOf(\"=>\", stream.start);\n            if (arrow < 0) return;\n\n            if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n                var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow));\n                if (m) arrow = m.index;\n            }\n\n            var depth = 0,\n                sawSomething = false;\n            for (var pos = arrow - 1; pos >= 0; --pos) {\n                var ch = stream.string.charAt(pos);\n                var bracket = brackets.indexOf(ch);\n                if (bracket >= 0 && bracket < 3) {\n                    if (!depth) {++pos; break; }\n                    if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n                } else if (bracket >= 3 && bracket < 6) {\n                    ++depth;\n                } else if (wordRE.test(ch)) {\n                    sawSomething = true;\n                } else if (/[\"'\\/`]/.test(ch)) {\n                    for (;; --pos) {\n                        if (pos == 0) return;\n                        var next = stream.string.charAt(pos - 1);\n                        if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break; }\n                    }\n                } else if (sawSomething && !depth) {\n                    ++pos;\n                    break;\n                }\n            }\n            if (sawSomething && !depth) state.fatArrowAt = pos;\n        }\n\n        // Parser\n\n        var atomicTypes = { \"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true, };\n\n        function JSLexical(indented, column, type, align, prev, info) {\n            this.indented = indented;\n            this.column = column;\n            this.type = type;\n            this.prev = prev;\n            this.info = info;\n            if (align != null) this.align = align;\n        }\n\n        function inScope(state, varname) {\n            for (var v = state.localVars; v; v = v.next)\n                if (v.name == varname) return true;\n            for (var cx = state.context; cx; cx = cx.prev) {\n                for (var v = cx.vars; v; v = v.next)\n                    if (v.name == varname) return true;\n            }\n        }\n\n        function parseJS(state, style, type, content, stream) {\n            var cc = state.cc;\n            // Communicate our context to the combinators.\n            // (Less wasteful than consing up a hundred closures on every call.)\n            cx.state = state;\n            cx.stream = stream;\n            cx.marked = null, cx.cc = cc;\n            cx.style = style;\n\n            if (!state.lexical.hasOwnProperty(\"align\"))\n                state.lexical.align = true;\n\n            while (true) {\n                var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n                if (combinator(type, content)) {\n                    while (cc.length && cc[cc.length - 1].lex)\n                        cc.pop()();\n                    if (cx.marked) return cx.marked;\n                    if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n                    return style;\n                }\n            }\n        }\n\n        // Combinator utils\n\n        var cx = { state: null, column: null, marked: null, cc: null, };\n\n        function pass() {\n            for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n        }\n\n        function cont() {\n            pass.apply(null, arguments);\n            return true;\n        }\n\n        function inList(name, list) {\n            for (var v = list; v; v = v.next)\n                if (v.name == name) return true;\n            return false;\n        }\n\n        function register(varname) {\n            var state = cx.state;\n            cx.marked = \"def\";\n            if (state.context) {\n                if (state.lexical.info == \"var\" && state.context && state.context.block) {\n                    // FIXME function decls are also not block scoped\n                    var newContext = registerVarScoped(varname, state.context);\n                    if (newContext != null) {\n                        state.context = newContext;\n                        return;\n                    }\n                } else if (!inList(varname, state.localVars)) {\n                    state.localVars = new Var(varname, state.localVars);\n                    return;\n                }\n            }\n            // Fall through means this is global\n            if (parserConfig.globalVars && !inList(varname, state.globalVars))\n                state.globalVars = new Var(varname, state.globalVars);\n        }\n\n        function registerVarScoped(varname, context) {\n            if (!context) {\n                return null;\n            } else if (context.block) {\n                var inner = registerVarScoped(varname, context.prev);\n                if (!inner) return null;\n                if (inner == context.prev) return context;\n                return new Context(inner, context.vars, true);\n            } else if (inList(varname, context.vars)) {\n                return context;\n            } else {\n                return new Context(context.prev, new Var(varname, context.vars), false);\n            }\n        }\n\n        function isModifier(name) {\n            return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\";\n        }\n\n        // Combinators\n\n        function Context(prev, vars, block) {\n            this.prev = prev;\n            this.vars = vars;\n            this.block = block;\n        }\n\n        function Var(name, next) {\n            this.name = name;\n            this.next = next;\n        }\n\n        var defaultVars = new Var(\"this\", new Var(\"arguments\", null));\n\n        function pushcontext() {\n            cx.state.context = new Context(cx.state.context, cx.state.localVars, false);\n            cx.state.localVars = defaultVars;\n        }\n\n        function pushblockcontext() {\n            cx.state.context = new Context(cx.state.context, cx.state.localVars, true);\n            cx.state.localVars = null;\n        }\n\n        function popcontext() {\n            cx.state.localVars = cx.state.context.vars;\n            cx.state.context = cx.state.context.prev;\n        }\n        popcontext.lex = true;\n\n        function pushlex(type, info) {\n            var result = function() {\n                var state = cx.state,\n                    indent = state.indented;\n                if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n                else\n                    for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n                        indent = outer.indented;\n                state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n            };\n            result.lex = true;\n            return result;\n        }\n\n        function poplex() {\n            var state = cx.state;\n            if (state.lexical.prev) {\n                if (state.lexical.type == \")\")\n                    state.indented = state.lexical.indented;\n                state.lexical = state.lexical.prev;\n            }\n        }\n        poplex.lex = true;\n\n        function expect(wanted) {\n            function exp(type) {\n                if (type == wanted) return cont();\n                else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n                else return cont(exp);\n            }\n            return exp;\n        }\n\n        function statement(type, value) {\n            if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n            if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n            if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n            if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n            if (type == \"debugger\") return cont(expect(\";\"));\n            if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n            if (type == \";\") return cont();\n            if (type == \"if\") {\n                if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n                    cx.state.cc.pop()();\n                return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n            }\n            if (type == \"function\") return cont(functiondef);\n            if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n            if (type == \"class\" || (isTS && value == \"interface\")) {\n                cx.marked = \"keyword\";\n                return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex);\n            }\n            if (type == \"variable\") {\n                if (isTS && value == \"declare\") {\n                    cx.marked = \"keyword\";\n                    return cont(statement);\n                } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n                    cx.marked = \"keyword\";\n                    if (value == \"enum\") return cont(enumdef);\n                    else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n                    else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex);\n                } else if (isTS && value == \"namespace\") {\n                    cx.marked = \"keyword\";\n                    return cont(pushlex(\"form\"), expression, statement, poplex);\n                } else if (isTS && value == \"abstract\") {\n                    cx.marked = \"keyword\";\n                    return cont(statement);\n                } else {\n                    return cont(pushlex(\"stat\"), maybelabel);\n                }\n            }\n            if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                block, poplex, poplex, popcontext);\n            if (type == \"case\") return cont(expression, expect(\":\"));\n            if (type == \"default\") return cont(expect(\":\"));\n            if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n            if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n            if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n            if (type == \"async\") return cont(statement);\n            if (value == \"@\") return cont(expression, statement);\n            return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n        }\n\n        function maybeCatchBinding(type) {\n            if (type == \"(\") return cont(funarg, expect(\")\"));\n        }\n\n        function expression(type, value) {\n            return expressionInner(type, value, false);\n        }\n\n        function expressionNoComma(type, value) {\n            return expressionInner(type, value, true);\n        }\n\n        function parenExpr(type) {\n            if (type != \"(\") return pass();\n            return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex);\n        }\n\n        function expressionInner(type, value, noComma) {\n            if (cx.state.fatArrowAt == cx.stream.start) {\n                var body = noComma ? arrowBodyNoComma : arrowBody;\n                if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n                else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n            }\n\n            var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n            if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n            if (type == \"function\") return cont(functiondef, maybeop);\n            if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n            if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n            if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n            if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n            if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n            if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n            if (type == \"quasi\") return pass(quasi, maybeop);\n            if (type == \"new\") return cont(maybeTarget(noComma));\n            if (type == \"import\") return cont(expression);\n            return cont();\n        }\n\n        function maybeexpression(type) {\n            if (type.match(/[;\\}\\)\\],]/)) return pass();\n            return pass(expression);\n        }\n\n        function maybeoperatorComma(type, value) {\n            if (type == \",\") return cont(maybeexpression);\n            return maybeoperatorNoComma(type, value, false);\n        }\n\n        function maybeoperatorNoComma(type, value, noComma) {\n            var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n            var expr = noComma == false ? expression : expressionNoComma;\n            if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n            if (type == \"operator\") {\n                if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n                if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n                    return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n                if (value == \"?\") return cont(expression, expect(\":\"), expr);\n                return cont(expr);\n            }\n            if (type == \"quasi\") { return pass(quasi, me); }\n            if (type == \";\") return;\n            if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n            if (type == \".\") return cont(property, me);\n            if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n            if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me); }\n            if (type == \"regexp\") {\n                cx.state.lastType = cx.marked = \"operator\";\n                cx.stream.backUp(cx.stream.pos - cx.stream.start - 1);\n                return cont(expr);\n            }\n        }\n\n        function quasi(type, value) {\n            if (type != \"quasi\") return pass();\n            if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n            return cont(expression, continueQuasi);\n        }\n\n        function continueQuasi(type) {\n            if (type == \"}\") {\n                cx.marked = \"string-2\";\n                cx.state.tokenize = tokenQuasi;\n                return cont(quasi);\n            }\n        }\n\n        function arrowBody(type) {\n            findFatArrow(cx.stream, cx.state);\n            return pass(type == \"{\" ? statement : expression);\n        }\n\n        function arrowBodyNoComma(type) {\n            findFatArrow(cx.stream, cx.state);\n            return pass(type == \"{\" ? statement : expressionNoComma);\n        }\n\n        function maybeTarget(noComma) {\n            return function(type) {\n                if (type == \".\") return cont(noComma ? targetNoComma : target);\n                else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma);\n                else return pass(noComma ? expressionNoComma : expression);\n            };\n        }\n\n        function target(_, value) {\n            if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n        }\n\n        function targetNoComma(_, value) {\n            if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n        }\n\n        function maybelabel(type) {\n            if (type == \":\") return cont(poplex, statement);\n            return pass(maybeoperatorComma, expect(\";\"), poplex);\n        }\n\n        function property(type) {\n            if (type == \"variable\") { cx.marked = \"property\"; return cont(); }\n        }\n\n        function objprop(type, value) {\n            if (type == \"async\") {\n                cx.marked = \"property\";\n                return cont(objprop);\n            } else if (type == \"variable\" || cx.style == \"keyword\") {\n                cx.marked = \"property\";\n                if (value == \"get\" || value == \"set\") return cont(getterSetter);\n                var m; // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n                if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n                    cx.state.fatArrowAt = cx.stream.pos + m[0].length;\n                return cont(afterprop);\n            } else if (type == \"number\" || type == \"string\") {\n                cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n                return cont(afterprop);\n            } else if (type == \"jsonld-keyword\") {\n                return cont(afterprop);\n            } else if (isTS && isModifier(value)) {\n                cx.marked = \"keyword\";\n                return cont(objprop);\n            } else if (type == \"[\") {\n                return cont(expression, maybetype, expect(\"]\"), afterprop);\n            } else if (type == \"spread\") {\n                return cont(expressionNoComma, afterprop);\n            } else if (value == \"*\") {\n                cx.marked = \"keyword\";\n                return cont(objprop);\n            } else if (type == \":\") {\n                return pass(afterprop);\n            }\n        }\n\n        function getterSetter(type) {\n            if (type != \"variable\") return pass(afterprop);\n            cx.marked = \"property\";\n            return cont(functiondef);\n        }\n\n        function afterprop(type) {\n            if (type == \":\") return cont(expressionNoComma);\n            if (type == \"(\") return pass(functiondef);\n        }\n\n        function commasep(what, end, sep) {\n            function proceed(type, value) {\n                if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n                    var lex = cx.state.lexical;\n                    if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n                    return cont(function(type, value) {\n                        if (type == end || value == end) return pass();\n                        return pass(what);\n                    }, proceed);\n                }\n                if (type == end || value == end) return cont();\n                if (sep && sep.indexOf(\";\") > -1) return pass(what);\n                return cont(expect(end));\n            }\n            return function(type, value) {\n                if (type == end || value == end) return cont();\n                return pass(what, proceed);\n            };\n        }\n\n        function contCommasep(what, end, info) {\n            for (var i = 3; i < arguments.length; i++)\n                cx.cc.push(arguments[i]);\n            return cont(pushlex(end, info), commasep(what, end), poplex);\n        }\n\n        function block(type) {\n            if (type == \"}\") return cont();\n            return pass(statement, block);\n        }\n\n        function maybetype(type, value) {\n            if (isTS) {\n                if (type == \":\") return cont(typeexpr);\n                if (value == \"?\") return cont(maybetype);\n            }\n        }\n\n        function maybetypeOrIn(type, value) {\n            if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr);\n        }\n\n        function mayberettype(type) {\n            if (isTS && type == \":\") {\n                if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr);\n                else return cont(typeexpr);\n            }\n        }\n\n        function isKW(_, value) {\n            if (value == \"is\") {\n                cx.marked = \"keyword\";\n                return cont();\n            }\n        }\n\n        function typeexpr(type, value) {\n            if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\n                cx.marked = \"keyword\";\n                return cont(value == \"typeof\" ? expressionNoComma : typeexpr);\n            }\n            if (type == \"variable\" || value == \"void\") {\n                cx.marked = \"type\";\n                return cont(afterType);\n            }\n            if (value == \"|\" || value == \"&\") return cont(typeexpr);\n            if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n            if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType);\n            if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType);\n            if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType);\n            if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr);\n        }\n\n        function maybeReturnType(type) {\n            if (type == \"=>\") return cont(typeexpr);\n        }\n\n        function typeprop(type, value) {\n            if (type == \"variable\" || cx.style == \"keyword\") {\n                cx.marked = \"property\";\n                return cont(typeprop);\n            } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n                return cont(typeprop);\n            } else if (type == \":\") {\n                return cont(typeexpr);\n            } else if (type == \"[\") {\n                return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop);\n            } else if (type == \"(\") {\n                return pass(functiondecl, typeprop);\n            }\n        }\n\n        function typearg(type, value) {\n            if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg);\n            if (type == \":\") return cont(typeexpr);\n            if (type == \"spread\") return cont(typearg);\n            return pass(typeexpr);\n        }\n\n        function afterType(type, value) {\n            if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType);\n            if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr);\n            if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType);\n            if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr); }\n            if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr);\n        }\n\n        function maybeTypeArgs(_, value) {\n            if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType);\n        }\n\n        function typeparam() {\n            return pass(typeexpr, maybeTypeDefault);\n        }\n\n        function maybeTypeDefault(_, value) {\n            if (value == \"=\") return cont(typeexpr);\n        }\n\n        function vardef(_, value) {\n            if (value == \"enum\") { cx.marked = \"keyword\"; return cont(enumdef); }\n            return pass(pattern, maybetype, maybeAssign, vardefCont);\n        }\n\n        function pattern(type, value) {\n            if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern); }\n            if (type == \"variable\") { register(value); return cont(); }\n            if (type == \"spread\") return cont(pattern);\n            if (type == \"[\") return contCommasep(eltpattern, \"]\");\n            if (type == \"{\") return contCommasep(proppattern, \"}\");\n        }\n\n        function proppattern(type, value) {\n            if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n                register(value);\n                return cont(maybeAssign);\n            }\n            if (type == \"variable\") cx.marked = \"property\";\n            if (type == \"spread\") return cont(pattern);\n            if (type == \"}\") return pass();\n            if (type == \"[\") return cont(expression, expect(\"]\"), expect(\":\"), proppattern);\n            return cont(expect(\":\"), pattern, maybeAssign);\n        }\n\n        function eltpattern() {\n            return pass(pattern, maybeAssign);\n        }\n\n        function maybeAssign(_type, value) {\n            if (value == \"=\") return cont(expressionNoComma);\n        }\n\n        function vardefCont(type) {\n            if (type == \",\") return cont(vardef);\n        }\n\n        function maybeelse(type, value) {\n            if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n        }\n\n        function forspec(type, value) {\n            if (value == \"await\") return cont(forspec);\n            if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n        }\n\n        function forspec1(type) {\n            if (type == \"var\") return cont(vardef, forspec2);\n            if (type == \"variable\") return cont(forspec2);\n            return pass(forspec2);\n        }\n\n        function forspec2(type, value) {\n            if (type == \")\") return cont();\n            if (type == \";\") return cont(forspec2);\n            if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2); }\n            return pass(expression, forspec2);\n        }\n\n        function functiondef(type, value) {\n            if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondef); }\n            if (type == \"variable\") { register(value); return cont(functiondef); }\n            if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n            if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef);\n        }\n\n        function functiondecl(type, value) {\n            if (value == \"*\") { cx.marked = \"keyword\"; return cont(functiondecl); }\n            if (type == \"variable\") { register(value); return cont(functiondecl); }\n            if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n            if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl);\n        }\n\n        function typename(type, value) {\n            if (type == \"keyword\" || type == \"variable\") {\n                cx.marked = \"type\";\n                return cont(typename);\n            } else if (value == \"<\") {\n                return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex);\n            }\n        }\n\n        function funarg(type, value) {\n            if (value == \"@\") cont(expression, funarg);\n            if (type == \"spread\") return cont(funarg);\n            if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n            if (isTS && type == \"this\") return cont(maybetype, maybeAssign);\n            return pass(pattern, maybetype, maybeAssign);\n        }\n\n        function classExpression(type, value) {\n            // Class expressions may have an optional name.\n            if (type == \"variable\") return className(type, value);\n            return classNameAfter(type, value);\n        }\n\n        function className(type, value) {\n            if (type == \"variable\") { register(value); return cont(classNameAfter); }\n        }\n\n        function classNameAfter(type, value) {\n            if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter);\n            if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n                if (value == \"implements\") cx.marked = \"keyword\";\n                return cont(isTS ? typeexpr : expression, classNameAfter);\n            }\n            if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n        }\n\n        function classBody(type, value) {\n            if (type == \"async\" ||\n                (type == \"variable\" &&\n                    (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n                    cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n                cx.marked = \"keyword\";\n                return cont(classBody);\n            }\n            if (type == \"variable\" || cx.style == \"keyword\") {\n                cx.marked = \"property\";\n                return cont(classfield, classBody);\n            }\n            if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n            if (type == \"[\")\n                return cont(expression, maybetype, expect(\"]\"), classfield, classBody);\n            if (value == \"*\") {\n                cx.marked = \"keyword\";\n                return cont(classBody);\n            }\n            if (isTS && type == \"(\") return pass(functiondecl, classBody);\n            if (type == \";\" || type == \",\") return cont(classBody);\n            if (type == \"}\") return cont();\n            if (value == \"@\") return cont(expression, classBody);\n        }\n\n        function classfield(type, value) {\n            if (value == \"?\") return cont(classfield);\n            if (type == \":\") return cont(typeexpr, maybeAssign);\n            if (value == \"=\") return cont(expressionNoComma);\n            var context = cx.state.lexical.prev,\n                isInterface = context && context.info == \"interface\";\n            return pass(isInterface ? functiondecl : functiondef);\n        }\n\n        function afterExport(type, value) {\n            if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n            if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n            if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n            return pass(statement);\n        }\n\n        function exportField(type, value) {\n            if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n            if (type == \"variable\") return pass(expressionNoComma, exportField);\n        }\n\n        function afterImport(type) {\n            if (type == \"string\") return cont();\n            if (type == \"(\") return pass(expression);\n            return pass(importSpec, maybeMoreImports, maybeFrom);\n        }\n\n        function importSpec(type, value) {\n            if (type == \"{\") return contCommasep(importSpec, \"}\");\n            if (type == \"variable\") register(value);\n            if (value == \"*\") cx.marked = \"keyword\";\n            return cont(maybeAs);\n        }\n\n        function maybeMoreImports(type) {\n            if (type == \",\") return cont(importSpec, maybeMoreImports);\n        }\n\n        function maybeAs(_type, value) {\n            if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n        }\n\n        function maybeFrom(_type, value) {\n            if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n        }\n\n        function arrayLiteral(type) {\n            if (type == \"]\") return cont();\n            return pass(commasep(expressionNoComma, \"]\"));\n        }\n\n        function enumdef() {\n            return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex);\n        }\n\n        function enummember() {\n            return pass(pattern, maybeAssign);\n        }\n\n        function isContinuedStatement(state, textAfter) {\n            return state.lastType == \"operator\" || state.lastType == \",\" ||\n                isOperatorChar.test(textAfter.charAt(0)) ||\n                /[,.]/.test(textAfter.charAt(0));\n        }\n\n        function expressionAllowed(stream, state, backUp) {\n            return state.tokenize == tokenBase &&\n                /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n                (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))));\n        }\n\n        // Interface\n\n        return {\n            startState: function(basecolumn) {\n                var state = {\n                    tokenize: tokenBase,\n                    lastType: \"sof\",\n                    cc: [],\n                    lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n                    localVars: parserConfig.localVars,\n                    context: parserConfig.localVars && new Context(null, null, false),\n                    indented: basecolumn || 0,\n                };\n                if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n                    state.globalVars = parserConfig.globalVars;\n                return state;\n            },\n\n            token: function(stream, state) {\n                if (stream.sol()) {\n                    if (!state.lexical.hasOwnProperty(\"align\"))\n                        state.lexical.align = false;\n                    state.indented = stream.indentation();\n                    findFatArrow(stream, state);\n                }\n                if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n                var style = state.tokenize(stream, state);\n                if (type == \"comment\") return style;\n                state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n                return parseJS(state, style, type, content, stream);\n            },\n\n            indent: function(state, textAfter) {\n                if (state.tokenize == tokenComment) return CodeMirror.Pass;\n                if (state.tokenize != tokenBase) return 0;\n                var firstChar = textAfter && textAfter.charAt(0),\n                    lexical = state.lexical,\n                    top;\n                // Kludge to prevent 'maybelse' from blocking lexical scope pops\n                if (!/^\\s*else\\b/.test(textAfter))\n                    for (var i = state.cc.length - 1; i >= 0; --i) {\n                        var c = state.cc[i];\n                        if (c == poplex) lexical = lexical.prev;\n                        else if (c != maybeelse) break;\n                    }\n                while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n                    (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                        (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                        !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n                    lexical = lexical.prev;\n                if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n                    lexical = lexical.prev;\n                var type = lexical.type,\n                    closing = firstChar == type;\n\n                if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n                else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n                else if (type == \"form\") return lexical.indented + indentUnit;\n                else if (type == \"stat\")\n                    return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n                else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n                    return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n                else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n                else return lexical.indented + (closing ? 0 : indentUnit);\n            },\n\n            electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n            blockCommentStart: jsonMode ? null : \"/*\",\n            blockCommentEnd: jsonMode ? null : \"*/\",\n            blockCommentContinue: jsonMode ? null : \" * \",\n            lineComment: jsonMode ? null : \"//\",\n            fold: \"brace\",\n            closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n            helperType: jsonMode ? \"json\" : \"kalaam\",\n            jsonldMode: jsonldMode,\n            jsonMode: jsonMode,\n\n            expressionAllowed: expressionAllowed,\n\n            skipExpression: function(state) {\n                var top = state.cc[state.cc.length - 1];\n                if (top == expression || top == expressionNoComma) state.cc.pop();\n            },\n        };\n    });\n\n    CodeMirror.registerHelper(\"wordChars\", \"kalaam\", /[\\w$]/);\n\n    CodeMirror.defineMIME(\"text/kalaam\", \"kalaam\");\n    CodeMirror.defineMIME(\"text/ecmascript\", \"kalaam\");\n    CodeMirror.defineMIME(\"application/kalaam\", \"kalaam\");\n    CodeMirror.defineMIME(\"application/x-kalaam\", \"kalaam\");\n    CodeMirror.defineMIME(\"application/ecmascript\", \"kalaam\");\n    CodeMirror.defineMIME(\"application/json\", { name: \"kalaam\", json: true, });\n    CodeMirror.defineMIME(\"application/x-json\", { name: \"kalaam\", json: true, });\n    CodeMirror.defineMIME(\"application/ld+json\", { name: \"kalaam\", jsonld: true, });\n    CodeMirror.defineMIME(\"text/typescript\", { name: \"kalaam\", typescript: true, });\n    CodeMirror.defineMIME(\"application/typescript\", { name: \"kalaam\", typescript: true, });\n\n});"]}]}