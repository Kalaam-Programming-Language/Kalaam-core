{"remainingRequest":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js!/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/utils/format.js","dependencies":[{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/utils/format.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50IjsKdmFyIHVuaXRzID0gWydCJywgJ0tCJywgJ01CJywgJ0dCJywgJ1RCJywgJ1BCJ107CmV4cG9ydCBmdW5jdGlvbiBodW1hblN0b3JhZ2VTaXplKGJ5dGVzKSB7CiAgdmFyIHUgPSAwOwoKICB3aGlsZSAocGFyc2VJbnQoYnl0ZXMsIDEwKSA+PSAxMDI0ICYmIHUgPCB1bml0cy5sZW5ndGggLSAxKSB7CiAgICBieXRlcyAvPSAxMDI0OwogICAgKyt1OwogIH0KCiAgcmV0dXJuICIiLmNvbmNhdChieXRlcy50b0ZpeGVkKDEpKS5jb25jYXQodW5pdHNbdV0pOwp9CmV4cG9ydCBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cikgewogIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGJldHdlZW4odiwgbWluLCBtYXgpIHsKICByZXR1cm4gbWF4IDw9IG1pbiA/IG1pbiA6IE1hdGgubWluKG1heCwgTWF0aC5tYXgobWluLCB2KSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVRvSW50ZXJ2YWwodiwgbWluLCBtYXgpIHsKICBpZiAobWF4IDw9IG1pbikgewogICAgcmV0dXJuIG1pbjsKICB9CgogIHZhciBzaXplID0gbWF4IC0gbWluICsgMTsKICB2YXIgaW5kZXggPSBtaW4gKyAodiAtIG1pbikgJSBzaXplOwoKICBpZiAoaW5kZXggPCBtaW4pIHsKICAgIGluZGV4ID0gc2l6ZSArIGluZGV4OwogIH0KCiAgcmV0dXJuIGluZGV4ID09PSAwID8gMCA6IGluZGV4OyAvLyBmaXggZm9yICgtYSAlIGEpID0+IC0wCn0KZXhwb3J0IGZ1bmN0aW9uIHBhZCh2KSB7CiAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMjsKCiAgdmFyIF9jaGFyID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAnMCc7CgogIGlmICh2ID09PSB2b2lkIDAgfHwgdiA9PT0gbnVsbCkgewogICAgcmV0dXJuIHY7CiAgfQoKICB2YXIgdmFsID0gJycgKyB2OwogIHJldHVybiB2YWwubGVuZ3RoID49IGxlbmd0aCA/IHZhbCA6IG5ldyBBcnJheShsZW5ndGggLSB2YWwubGVuZ3RoICsgMSkuam9pbihfY2hhcikgKyB2YWw7Cn0KZXhwb3J0IGRlZmF1bHQgewogIGh1bWFuU3RvcmFnZVNpemU6IGh1bWFuU3RvcmFnZVNpemUsCiAgY2FwaXRhbGl6ZTogY2FwaXRhbGl6ZSwKICBiZXR3ZWVuOiBiZXR3ZWVuLAogIG5vcm1hbGl6ZVRvSW50ZXJ2YWw6IG5vcm1hbGl6ZVRvSW50ZXJ2YWwsCiAgcGFkOiBwYWQKfTs="},{"version":3,"sources":["/Users/jonny/Desktop/myProjects/Kalaam-core/FE/node_modules/quasar/src/utils/format.js"],"names":["units","humanStorageSize","bytes","u","parseInt","length","toFixed","capitalize","str","charAt","toUpperCase","slice","between","v","min","max","Math","normalizeToInterval","size","index","pad","char","val","Array","join"],"mappings":";;;;;AAAA,IAAMA,KAAK,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAd;AAEA,OAAO,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AACvC,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAOC,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAR,IAAuB,IAAvB,IAA+BC,CAAC,GAAGH,KAAK,CAACK,MAAN,GAAe,CAAzD,EAA4D;AAC1DH,IAAAA,KAAK,IAAI,IAAT;AACA,MAAEC,CAAF;AACD;;AAED,mBAAUD,KAAK,CAACI,OAAN,CAAc,CAAd,CAAV,SAA6BN,KAAK,CAACG,CAAD,CAAlC;AACD;AAED,OAAO,SAASI,UAAT,CAAqBC,GAArB,EAA0B;AAC/B,SAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAArC;AACD;AAED,OAAO,SAASC,OAAT,CAAkBC,CAAlB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+B;AACpC,SAAOA,GAAG,IAAID,GAAP,GACHA,GADG,GAEHE,IAAI,CAACF,GAAL,CAASC,GAAT,EAAcC,IAAI,CAACD,GAAL,CAASD,GAAT,EAAcD,CAAd,CAAd,CAFJ;AAGD;AAED,OAAO,SAASI,mBAAT,CAA8BJ,CAA9B,EAAiCC,GAAjC,EAAsCC,GAAtC,EAA2C;AAChD,MAAIA,GAAG,IAAID,GAAX,EAAgB;AACd,WAAOA,GAAP;AACD;;AAED,MAAMI,IAAI,GAAIH,GAAG,GAAGD,GAAN,GAAY,CAA1B;AAEA,MAAIK,KAAK,GAAGL,GAAG,GAAG,CAACD,CAAC,GAAGC,GAAL,IAAYI,IAA9B;;AACA,MAAIC,KAAK,GAAGL,GAAZ,EAAiB;AACfK,IAAAA,KAAK,GAAGD,IAAI,GAAGC,KAAf;AACD;;AAED,SAAOA,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBA,KAAzB,CAZgD,CAYjB;AAChC;AAED,OAAO,SAASC,GAAT,CAAcP,CAAd,EAAyC;AAAA,MAAxBR,MAAwB,uEAAf,CAAe;;AAAA,MAAZgB,KAAY,uEAAL,GAAK;;AAC9C,MAAIR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,IAA1B,EAAgC;AAC9B,WAAOA,CAAP;AACD;;AAED,MAAMS,GAAG,GAAG,KAAKT,CAAjB;AACA,SAAOS,GAAG,CAACjB,MAAJ,IAAcA,MAAd,GACHiB,GADG,GAEH,IAAIC,KAAJ,CAAUlB,MAAM,GAAGiB,GAAG,CAACjB,MAAb,GAAsB,CAAhC,EAAmCmB,IAAnC,CAAwCH,KAAxC,IAAgDC,GAFpD;AAGD;AAED,eAAe;AACbrB,EAAAA,gBAAgB,EAAhBA,gBADa;AAEbM,EAAAA,UAAU,EAAVA,UAFa;AAGbK,EAAAA,OAAO,EAAPA,OAHa;AAIbK,EAAAA,mBAAmB,EAAnBA,mBAJa;AAKbG,EAAAA,GAAG,EAAHA;AALa,CAAf","sourcesContent":["const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\n\nexport function humanStorageSize (bytes) {\n  let u = 0\n\n  while (parseInt(bytes, 10) >= 1024 && u < units.length - 1) {\n    bytes /= 1024\n    ++u\n  }\n\n  return `${bytes.toFixed(1)}${units[u]}`\n}\n\nexport function capitalize (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function between (v, min, max) {\n  return max <= min\n    ? min\n    : Math.min(max, Math.max(min, v))\n}\n\nexport function normalizeToInterval (v, min, max) {\n  if (max <= min) {\n    return min\n  }\n\n  const size = (max - min + 1)\n\n  let index = min + (v - min) % size\n  if (index < min) {\n    index = size + index\n  }\n\n  return index === 0 ? 0 : index // fix for (-a % a) => -0\n}\n\nexport function pad (v, length = 2, char = '0') {\n  if (v === void 0 || v === null) {\n    return v\n  }\n\n  const val = '' + v\n  return val.length >= length\n    ? val\n    : new Array(length - val.length + 1).join(char) + val\n}\n\nexport default {\n  humanStorageSize,\n  capitalize,\n  between,\n  normalizeToInterval,\n  pad\n}\n"]}]}